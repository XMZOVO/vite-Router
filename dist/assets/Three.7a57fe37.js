import{G as z,S as B,P as k,W as G,O as R,B as S,C as v,a as f,b as W,A as E,c as I,d as O}from"./dat.gui.module.19d70a74.js";import{_ as T}from"./plugin-vue_export-helper.21dcd24c.js";import{B as q,C as H,o as L,c as U}from"./vendor.914513ac.js";const j={class:"webgl"},D={setup(X){const e={};e.count=1e5,e.size=.01,e.radius=5,e.branches=3,e.spin=1,e.randomness=.002,e.randomnessPower=3,e.insideColors="#ff6030",e.outsideColors="#1b3984";let r=null,u=null,h=null,g,d,s,p,i,C;const o=new z({width:360});q(()=>{o.destroy()}),H(()=>{g=document.querySelector("canvas.webgl"),d=new B,t();const n={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",()=>{n.width=window.innerWidth,n.height=window.innerHeight,s.aspect=n.width/n.height,s.updateProjectionMatrix(),i.setSize(n.width,n.height),i.setPixelRatio(Math.min(window.devicePixelRatio,2))}),s=new k(75,n.width/n.height,.1,100),s.position.x=3,s.position.y=3,s.position.z=3,d.add(s),i=new G({canvas:g}),i.setSize(n.width,n.height),i.setPixelRatio(Math.min(window.devicePixelRatio,2)),p=new R(s,i.domElement),p.enableDamping=!0,C=new O,_()});const t=()=>{h!=null&&(r.dispose(),u.dispose(),d.remove(h)),r=new S;const n=new Float32Array(e.count*3),c=new Float32Array(e.count*3),P=new v(e.insideColors),x=new v(e.outsideColors);for(let l=0;l<e.count;l++){const a=l*3,w=Math.random()*e.radius,b=w*e.spin,M=l%e.branches/e.branches*Math.PI*2,F=Math.pow(Math.random(),e.randomnessPower)*(Math.random()<.5?1:-1),A=Math.pow(Math.random(),e.randomnessPower)*(Math.random()<.5?1:-1),y=Math.pow(Math.random(),e.randomnessPower)*(Math.random()<.5?1:-1);n[a+0]=Math.cos(M+b)*w+F,n[a+1]=0+A,n[a+2]=Math.sin(M+b)*w+y;const m=P.clone();m.lerp(x,w/e.radius),c[a+0]=m.r,c[a+1]=m.g,c[a+2]=m.b}r.setAttribute("position",new f(n,3)),r.setAttribute("color",new f(c,3)),u=new W({size:e.size,sizeAttenuation:!0,depthWrite:!1,blending:E,vertexColors:!0}),h=new I(r,u),d.add(h)};o.add(e,"count",100,1e6,100).onFinishChange(t),o.add(e,"size",.001,.1,.001).onFinishChange(t),o.add(e,"radius",.01,20,.01).onFinishChange(t),o.add(e,"branches",2,20,1).onFinishChange(t),o.add(e,"spin",-5,5,.001).onFinishChange(t),o.add(e,"randomness",0,2,.001).onFinishChange(t),o.add(e,"randomnessPower",1,10,.001).onFinishChange(t),o.addColor(e,"insideColors",1,10,.001).onFinishChange(t),o.addColor(e,"outsideColors",1,10,.001).onFinishChange(t);const _=()=>{C.getElapsedTime(),p.update(),i.render(d,s),window.requestAnimationFrame(_)};return(n,c)=>(L(),U("canvas",j))}};var J=T(D,[["__scopeId","data-v-3b4c2c35"]]);export{J as default};

var We=Object.defineProperty;var Ve=(N,t,e)=>t in N?We(N,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):N[t]=e;var xt=(N,t,e)=>(Ve(N,typeof t!="symbol"?t+"":t,e),e);import{E as De,O as Qt,Q as He,V as Ot,g as Ge,P as Ye,h as Ue,S as Xe,i as $e,s as te,W as Ke,R as Ze,j as Je,k as Qe,D as ts,l as es,m as ss,n as _t,o as ee,p as se,q as ns,r as is}from"./three.module.48da4049.js";import{D as os,G as rs}from"./DRACOLoader.c785dcf0.js";import{_ as cs}from"./index.b1bdc34e.js";import{C as as,o as ls,e as hs,D as ds,E as us,f as Ce,j as ps}from"./vendor.a9b44f4b.js";class et{constructor(t){t===void 0&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){t===void 0&&(t=new c);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){e===void 0&&(e=new c);const s=this.elements,n=t.x,i=t.y,o=t.z;return e.x=s[0]*n+s[1]*i+s[2]*o,e.y=s[3]*n+s[4]*i+s[5]*o,e.z=s[6]*n+s[7]*i+s[8]*o,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){e===void 0&&(e=new et);const s=this.elements,n=t.elements,i=e.elements,o=s[0],r=s[1],a=s[2],l=s[3],d=s[4],u=s[5],h=s[6],f=s[7],p=s[8],y=n[0],m=n[1],w=n[2],v=n[3],x=n[4],g=n[5],z=n[6],C=n[7],B=n[8];return i[0]=o*y+r*v+a*z,i[1]=o*m+r*x+a*C,i[2]=o*w+r*g+a*B,i[3]=l*y+d*v+u*z,i[4]=l*m+d*x+u*C,i[5]=l*w+d*g+u*B,i[6]=h*y+f*v+p*z,i[7]=h*m+f*x+p*C,i[8]=h*w+f*g+p*B,e}scale(t,e){e===void 0&&(e=new et);const s=this.elements,n=e.elements;for(let i=0;i!==3;i++)n[3*i+0]=t.x*s[3*i+0],n[3*i+1]=t.y*s[3*i+1],n[3*i+2]=t.z*s[3*i+2];return e}solve(t,e){e===void 0&&(e=new c);const s=3,n=4,i=[];let o,r;for(o=0;o<s*n;o++)i.push(0);for(o=0;o<3;o++)for(r=0;r<3;r++)i[o+n*r]=this.elements[o+3*r];i[3+4*0]=t.x,i[3+4*1]=t.y,i[3+4*2]=t.z;let a=3;const l=a;let d;const u=4;let h;do{if(o=l-a,i[o+n*o]===0){for(r=o+1;r<l;r++)if(i[o+n*r]!==0){d=u;do h=u-d,i[h+n*o]+=i[h+n*r];while(--d);break}}if(i[o+n*o]!==0)for(r=o+1;r<l;r++){const f=i[o+n*r]/i[o+n*o];d=u;do h=u-d,i[h+n*r]=h<=o?0:i[h+n*r]-i[h+n*o]*f;while(--d)}}while(--a);if(e.z=i[2*n+3]/i[2*n+2],e.y=(i[1*n+3]-i[1*n+2]*e.z)/i[1*n+1],e.x=(i[0*n+3]-i[0*n+2]*e.z-i[0*n+1]*e.y)/i[0*n+0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,s){if(s===void 0)return this.elements[e+3*t];this.elements[e+3*t]=s}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";const e=",";for(let s=0;s<9;s++)t+=this.elements[s]+e;return t}reverse(t){t===void 0&&(t=new et);const e=3,s=6,n=fs;let i,o;for(i=0;i<3;i++)for(o=0;o<3;o++)n[i+s*o]=this.elements[i+3*o];n[3+6*0]=1,n[3+6*1]=0,n[3+6*2]=0,n[4+6*0]=0,n[4+6*1]=1,n[4+6*2]=0,n[5+6*0]=0,n[5+6*1]=0,n[5+6*2]=1;let r=3;const a=r;let l;const d=s;let u;do{if(i=a-r,n[i+s*i]===0){for(o=i+1;o<a;o++)if(n[i+s*o]!==0){l=d;do u=d-l,n[u+s*i]+=n[u+s*o];while(--l);break}}if(n[i+s*i]!==0)for(o=i+1;o<a;o++){const h=n[i+s*o]/n[i+s*i];l=d;do u=d-l,n[u+s*o]=u<=i?0:n[u+s*o]-n[u+s*i]*h;while(--l)}}while(--r);i=2;do{o=i-1;do{const h=n[i+s*o]/n[i+s*i];l=s;do u=s-l,n[u+s*o]=n[u+s*o]-n[u+s*i]*h;while(--l)}while(o--)}while(--i);i=2;do{const h=1/n[i+s*i];l=s;do u=s-l,n[u+s*i]=n[u+s*i]*h;while(--l)}while(i--);i=2;do{o=2;do{if(u=n[e+o+s*i],isNaN(u)||u===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(i,o,u)}while(o--)}while(i--);return t}setRotationFromQuaternion(t){const e=t.x,s=t.y,n=t.z,i=t.w,o=e+e,r=s+s,a=n+n,l=e*o,d=e*r,u=e*a,h=s*r,f=s*a,p=n*a,y=i*o,m=i*r,w=i*a,v=this.elements;return v[3*0+0]=1-(h+p),v[3*0+1]=d-w,v[3*0+2]=u+m,v[3*1+0]=d+w,v[3*1+1]=1-(l+p),v[3*1+2]=f-y,v[3*2+0]=u-m,v[3*2+1]=f+y,v[3*2+2]=1-(l+h),this}transpose(t){t===void 0&&(t=new et);const e=this.elements,s=t.elements;let n;return s[0]=e[0],s[4]=e[4],s[8]=e[8],n=e[1],s[1]=e[3],s[3]=n,n=e[2],s[2]=e[6],s[6]=n,n=e[5],s[5]=e[7],s[7]=n,t}}const fs=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class c{constructor(t,e,s){t===void 0&&(t=0),e===void 0&&(e=0),s===void 0&&(s=0),this.x=t,this.y=e,this.z=s}cross(t,e){e===void 0&&(e=new c);const s=t.x,n=t.y,i=t.z,o=this.x,r=this.y,a=this.z;return e.x=r*i-a*n,e.y=a*s-o*i,e.z=o*n-r*s,e}set(t,e,s){return this.x=t,this.y=e,this.z=s,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(e)e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z;else return new c(this.x+t.x,this.y+t.y,this.z+t.z)}vsub(t,e){if(e)e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z;else return new c(this.x-t.x,this.y-t.y,this.z-t.z)}crossmat(){return new et([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,s=this.z,n=Math.sqrt(t*t+e*e+s*s);if(n>0){const i=1/n;this.x*=i,this.y*=i,this.z*=i}else this.x=0,this.y=0,this.z=0;return n}unit(t){t===void 0&&(t=new c);const e=this.x,s=this.y,n=this.z;let i=Math.sqrt(e*e+s*s+n*n);return i>0?(i=1/i,t.x=e*i,t.y=s*i,t.z=n*i):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,s=this.z;return Math.sqrt(t*t+e*e+s*s)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,s=this.y,n=this.z,i=t.x,o=t.y,r=t.z;return Math.sqrt((i-e)*(i-e)+(o-s)*(o-s)+(r-n)*(r-n))}distanceSquared(t){const e=this.x,s=this.y,n=this.z,i=t.x,o=t.y,r=t.z;return(i-e)*(i-e)+(o-s)*(o-s)+(r-n)*(r-n)}scale(t,e){e===void 0&&(e=new c);const s=this.x,n=this.y,i=this.z;return e.x=t*s,e.y=t*n,e.z=t*i,e}vmul(t,e){return e===void 0&&(e=new c),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,s){return s===void 0&&(s=new c),s.x=this.x+t*e.x,s.y=this.y+t*e.y,s.z=this.z+t*e.z,s}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(t){return t===void 0&&(t=new c),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const s=this.length();if(s>0){const n=ms,i=1/s;n.set(this.x*i,this.y*i,this.z*i);const o=vs;Math.abs(n.x)<.9?(o.set(1,0,0),n.cross(o,t)):(o.set(0,1,0),n.cross(o,t)),n.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,s){const n=this.x,i=this.y,o=this.z;s.x=n+(t.x-n)*e,s.y=i+(t.y-i)*e,s.z=o+(t.z-o)*e}almostEquals(t,e){return e===void 0&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return t===void 0&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(ne),ne.almostEquals(t,e)}clone(){return new c(this.x,this.y,this.z)}}c.ZERO=new c(0,0,0);c.UNIT_X=new c(1,0,0);c.UNIT_Y=new c(0,1,0);c.UNIT_Z=new c(0,0,1);const ms=new c,vs=new c,ne=new c;class J{constructor(t){t===void 0&&(t={}),this.lowerBound=new c,this.upperBound=new c,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,s,n){const i=this.lowerBound,o=this.upperBound,r=s;i.copy(t[0]),r&&r.vmult(i,i),o.copy(i);for(let a=1;a<t.length;a++){let l=t[a];r&&(r.vmult(l,ie),l=ie),l.x>o.x&&(o.x=l.x),l.x<i.x&&(i.x=l.x),l.y>o.y&&(o.y=l.y),l.y<i.y&&(i.y=l.y),l.z>o.z&&(o.z=l.z),l.z<i.z&&(i.z=l.z)}return e&&(e.vadd(i,i),e.vadd(o,o)),n&&(i.x-=n,i.y-=n,i.z-=n,o.x+=n,o.y+=n,o.z+=n),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return new J().copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,s=this.upperBound,n=t.lowerBound,i=t.upperBound,o=n.x<=s.x&&s.x<=i.x||e.x<=i.x&&i.x<=s.x,r=n.y<=s.y&&s.y<=i.y||e.y<=i.y&&i.y<=s.y,a=n.z<=s.z&&s.z<=i.z||e.z<=i.z&&i.z<=s.z;return o&&r&&a}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,s=this.upperBound,n=t.lowerBound,i=t.upperBound;return e.x<=n.x&&s.x>=i.x&&e.y<=n.y&&s.y>=i.y&&e.z<=n.z&&s.z>=i.z}getCorners(t,e,s,n,i,o,r,a){const l=this.lowerBound,d=this.upperBound;t.copy(l),e.set(d.x,l.y,l.z),s.set(d.x,d.y,l.z),n.set(l.x,d.y,d.z),i.set(d.x,l.y,d.z),o.set(l.x,d.y,l.z),r.set(l.x,l.y,d.z),a.copy(d)}toLocalFrame(t,e){const s=oe,n=s[0],i=s[1],o=s[2],r=s[3],a=s[4],l=s[5],d=s[6],u=s[7];this.getCorners(n,i,o,r,a,l,d,u);for(let h=0;h!==8;h++){const f=s[h];t.pointToLocal(f,f)}return e.setFromPoints(s)}toWorldFrame(t,e){const s=oe,n=s[0],i=s[1],o=s[2],r=s[3],a=s[4],l=s[5],d=s[6],u=s[7];this.getCorners(n,i,o,r,a,l,d,u);for(let h=0;h!==8;h++){const f=s[h];t.pointToWorld(f,f)}return e.setFromPoints(s)}overlapsRay(t){const{direction:e,from:s}=t,n=1/e.x,i=1/e.y,o=1/e.z,r=(this.lowerBound.x-s.x)*n,a=(this.upperBound.x-s.x)*n,l=(this.lowerBound.y-s.y)*i,d=(this.upperBound.y-s.y)*i,u=(this.lowerBound.z-s.z)*o,h=(this.upperBound.z-s.z)*o,f=Math.max(Math.max(Math.min(r,a),Math.min(l,d)),Math.min(u,h)),p=Math.min(Math.min(Math.max(r,a),Math.max(l,d)),Math.max(u,h));return!(p<0||f>p)}}const ie=new c,oe=[new c,new c,new c,new c,new c,new c,new c,new c];class re{constructor(){this.matrix=[]}get(t,e){let{index:s}=t,{index:n}=e;if(n>s){const i=n;n=s,s=i}return this.matrix[(s*(s+1)>>1)+n-1]}set(t,e,s){let{index:n}=t,{index:i}=e;if(i>n){const o=i;i=n,n=o}this.matrix[(n*(n+1)>>1)+i-1]=s?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class Se{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const s=this._listeners;return s[t]===void 0&&(s[t]=[]),s[t].includes(e)||s[t].push(e),this}hasEventListener(t,e){if(this._listeners===void 0)return!1;const s=this._listeners;return!!(s[t]!==void 0&&s[t].includes(e))}hasAnyEventListener(t){return this._listeners===void 0?!1:this._listeners[t]!==void 0}removeEventListener(t,e){if(this._listeners===void 0)return this;const s=this._listeners;if(s[t]===void 0)return this;const n=s[t].indexOf(e);return n!==-1&&s[t].splice(n,1),this}dispatchEvent(t){if(this._listeners===void 0)return this;const s=this._listeners[t.type];if(s!==void 0){t.target=this;for(let n=0,i=s.length;n<i;n++)s[n].call(this,t)}return this}}class U{constructor(t,e,s,n){t===void 0&&(t=0),e===void 0&&(e=0),s===void 0&&(s=0),n===void 0&&(n=1),this.x=t,this.y=e,this.z=s,this.w=n}set(t,e,s,n){return this.x=t,this.y=e,this.z=s,this.w=n,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const s=Math.sin(e*.5);return this.x=t.x*s,this.y=t.y*s,this.z=t.z*s,this.w=Math.cos(e*.5),this}toAxisAngle(t){t===void 0&&(t=new c),this.normalize();const e=2*Math.acos(this.w),s=Math.sqrt(1-this.w*this.w);return s<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/s,t.y=this.y/s,t.z=this.z/s),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const s=ys,n=ws;t.tangents(s,n),this.setFromAxisAngle(s,Math.PI)}else{const s=t.cross(e);this.x=s.x,this.y=s.y,this.z=s.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){e===void 0&&(e=new U);const s=this.x,n=this.y,i=this.z,o=this.w,r=t.x,a=t.y,l=t.z,d=t.w;return e.x=s*d+o*r+n*l-i*a,e.y=n*d+o*a+i*r-s*l,e.z=i*d+o*l+s*a-n*r,e.w=o*d-s*r-n*a-i*l,e}inverse(t){t===void 0&&(t=new U);const e=this.x,s=this.y,n=this.z,i=this.w;this.conjugate(t);const o=1/(e*e+s*s+n*n+i*i);return t.x*=o,t.y*=o,t.z*=o,t.w*=o,t}conjugate(t){return t===void 0&&(t=new U),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){e===void 0&&(e=new c);const s=t.x,n=t.y,i=t.z,o=this.x,r=this.y,a=this.z,l=this.w,d=l*s+r*i-a*n,u=l*n+a*s-o*i,h=l*i+o*n-r*s,f=-o*s-r*n-a*i;return e.x=d*l+f*-o+u*-a-h*-r,e.y=u*l+f*-r+h*-o-d*-a,e.z=h*l+f*-a+d*-r-u*-o,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){e===void 0&&(e="YZX");let s,n,i;const o=this.x,r=this.y,a=this.z,l=this.w;switch(e){case"YZX":const d=o*r+a*l;if(d>.499&&(s=2*Math.atan2(o,l),n=Math.PI/2,i=0),d<-.499&&(s=-2*Math.atan2(o,l),n=-Math.PI/2,i=0),s===void 0){const u=o*o,h=r*r,f=a*a;s=Math.atan2(2*r*l-2*o*a,1-2*h-2*f),n=Math.asin(2*d),i=Math.atan2(2*o*l-2*r*a,1-2*u-2*f)}break;default:throw new Error(`Euler order ${e} not supported yet.`)}t.y=s,t.z=n,t.x=i}setFromEuler(t,e,s,n){n===void 0&&(n="XYZ");const i=Math.cos(t/2),o=Math.cos(e/2),r=Math.cos(s/2),a=Math.sin(t/2),l=Math.sin(e/2),d=Math.sin(s/2);return n==="XYZ"?(this.x=a*o*r+i*l*d,this.y=i*l*r-a*o*d,this.z=i*o*d+a*l*r,this.w=i*o*r-a*l*d):n==="YXZ"?(this.x=a*o*r+i*l*d,this.y=i*l*r-a*o*d,this.z=i*o*d-a*l*r,this.w=i*o*r+a*l*d):n==="ZXY"?(this.x=a*o*r-i*l*d,this.y=i*l*r+a*o*d,this.z=i*o*d+a*l*r,this.w=i*o*r-a*l*d):n==="ZYX"?(this.x=a*o*r-i*l*d,this.y=i*l*r+a*o*d,this.z=i*o*d-a*l*r,this.w=i*o*r+a*l*d):n==="YZX"?(this.x=a*o*r+i*l*d,this.y=i*l*r+a*o*d,this.z=i*o*d-a*l*r,this.w=i*o*r-a*l*d):n==="XZY"&&(this.x=a*o*r-i*l*d,this.y=i*l*r-a*o*d,this.z=i*o*d+a*l*r,this.w=i*o*r+a*l*d),this}clone(){return new U(this.x,this.y,this.z,this.w)}slerp(t,e,s){s===void 0&&(s=new U);const n=this.x,i=this.y,o=this.z,r=this.w;let a=t.x,l=t.y,d=t.z,u=t.w,h,f,p,y,m;return f=n*a+i*l+o*d+r*u,f<0&&(f=-f,a=-a,l=-l,d=-d,u=-u),1-f>1e-6?(h=Math.acos(f),p=Math.sin(h),y=Math.sin((1-e)*h)/p,m=Math.sin(e*h)/p):(y=1-e,m=e),s.x=y*n+m*a,s.y=y*i+m*l,s.z=y*o+m*d,s.w=y*r+m*u,s}integrate(t,e,s,n){n===void 0&&(n=new U);const i=t.x*s.x,o=t.y*s.y,r=t.z*s.z,a=this.x,l=this.y,d=this.z,u=this.w,h=e*.5;return n.x+=h*(i*u+o*d-r*l),n.y+=h*(o*u+r*a-i*d),n.z+=h*(r*u+i*l-o*a),n.w+=h*(-i*a-o*l-r*d),n}}const ys=new c,ws=new c,xs={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class T{constructor(t){t===void 0&&(t={}),this.id=T.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=t.collisionResponse?t.collisionResponse:!0,this.collisionFilterGroup=t.collisionFilterGroup!==void 0?t.collisionFilterGroup:1,this.collisionFilterMask=t.collisionFilterMask!==void 0?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,s,n){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}T.idCounter=0;T.types=xs;class j{constructor(t){t===void 0&&(t={}),this.position=new c,this.quaternion=new U,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return j.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return j.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return e===void 0&&(e=new c),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,s,n){return n===void 0&&(n=new c),s.vsub(t,n),e.conjugate(ce),ce.vmult(n,n),n}static pointToWorldFrame(t,e,s,n){return n===void 0&&(n=new c),e.vmult(s,n),n.vadd(t,n),n}static vectorToWorldFrame(t,e,s){return s===void 0&&(s=new c),t.vmult(e,s),s}static vectorToLocalFrame(t,e,s,n){return n===void 0&&(n=new c),e.w*=-1,e.vmult(s,n),e.w*=-1,n}}const ce=new U;class Pt extends T{constructor(t){t===void 0&&(t={});const{vertices:e=[],faces:s=[],normals:n=[],axes:i,boundingSphereRadius:o}=t;super({type:T.types.CONVEXPOLYHEDRON});this.vertices=e,this.faces=s,this.faceNormals=n,this.faceNormals.length===0&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=i?i.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,s=this.uniqueEdges;s.length=0;const n=new c;for(let i=0;i!==t.length;i++){const o=t[i],r=o.length;for(let a=0;a!==r;a++){const l=(a+1)%r;e[o[a]].vsub(e[o[l]],n),n.normalize();let d=!1;for(let u=0;u!==s.length;u++)if(s[u].almostEquals(n)||s[u].almostEquals(n)){d=!0;break}d||s.push(n.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let n=0;n<this.faces[t].length;n++)if(!this.vertices[this.faces[t][n]])throw new Error(`Vertex ${this.faces[t][n]} not found!`);const e=this.faceNormals[t]||new c;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const s=this.vertices[this.faces[t][0]];if(e.dot(s)<0){console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let n=0;n<this.faces[t].length;n++)console.warn(`.vertices[${this.faces[t][n]}] = Vec3(${this.vertices[this.faces[t][n]].toString()})`)}}}getFaceNormal(t,e){const s=this.faces[t],n=this.vertices[s[0]],i=this.vertices[s[1]],o=this.vertices[s[2]];Pt.computeNormal(n,i,o,e)}static computeNormal(t,e,s,n){const i=new c,o=new c;e.vsub(t,o),s.vsub(e,i),i.cross(o,n),n.isZero()||n.normalize()}clipAgainstHull(t,e,s,n,i,o,r,a,l){const d=new c;let u=-1,h=-Number.MAX_VALUE;for(let p=0;p<s.faces.length;p++){d.copy(s.faceNormals[p]),i.vmult(d,d);const y=d.dot(o);y>h&&(h=y,u=p)}const f=[];for(let p=0;p<s.faces[u].length;p++){const y=s.vertices[s.faces[u][p]],m=new c;m.copy(y),i.vmult(m,m),n.vadd(m,m),f.push(m)}u>=0&&this.clipFaceAgainstHull(o,t,e,f,r,a,l)}findSeparatingAxis(t,e,s,n,i,o,r,a){const l=new c,d=new c,u=new c,h=new c,f=new c,p=new c;let y=Number.MAX_VALUE;const m=this;if(m.uniqueAxes)for(let w=0;w!==m.uniqueAxes.length;w++){s.vmult(m.uniqueAxes[w],l);const v=m.testSepAxis(l,t,e,s,n,i);if(v===!1)return!1;v<y&&(y=v,o.copy(l))}else{const w=r?r.length:m.faces.length;for(let v=0;v<w;v++){const x=r?r[v]:v;l.copy(m.faceNormals[x]),s.vmult(l,l);const g=m.testSepAxis(l,t,e,s,n,i);if(g===!1)return!1;g<y&&(y=g,o.copy(l))}}if(t.uniqueAxes)for(let w=0;w!==t.uniqueAxes.length;w++){i.vmult(t.uniqueAxes[w],d);const v=m.testSepAxis(d,t,e,s,n,i);if(v===!1)return!1;v<y&&(y=v,o.copy(d))}else{const w=a?a.length:t.faces.length;for(let v=0;v<w;v++){const x=a?a[v]:v;d.copy(t.faceNormals[x]),i.vmult(d,d);const g=m.testSepAxis(d,t,e,s,n,i);if(g===!1)return!1;g<y&&(y=g,o.copy(d))}}for(let w=0;w!==m.uniqueEdges.length;w++){s.vmult(m.uniqueEdges[w],h);for(let v=0;v!==t.uniqueEdges.length;v++)if(i.vmult(t.uniqueEdges[v],f),h.cross(f,p),!p.almostZero()){p.normalize();const x=m.testSepAxis(p,t,e,s,n,i);if(x===!1)return!1;x<y&&(y=x,o.copy(p))}}return n.vsub(e,u),u.dot(o)>0&&o.negate(o),!0}testSepAxis(t,e,s,n,i,o){const r=this;Pt.project(r,t,s,n,Ht),Pt.project(e,t,i,o,Gt);const a=Ht[0],l=Ht[1],d=Gt[0],u=Gt[1];if(a<u||d<l)return!1;const h=a-u,f=d-l;return h<f?h:f}calculateLocalInertia(t,e){const s=new c,n=new c;this.computeLocalAABB(n,s);const i=s.x-n.x,o=s.y-n.y,r=s.z-n.z;e.x=1/12*t*(2*o*2*o+2*r*2*r),e.y=1/12*t*(2*i*2*i+2*r*2*r),e.z=1/12*t*(2*o*2*o+2*i*2*i)}getPlaneConstantOfFace(t){const e=this.faces[t],s=this.faceNormals[t],n=this.vertices[e[0]];return-s.dot(n)}clipFaceAgainstHull(t,e,s,n,i,o,r){const a=new c,l=new c,d=new c,u=new c,h=new c,f=new c,p=new c,y=new c,m=this,w=[],v=n,x=w;let g=-1,z=Number.MAX_VALUE;for(let A=0;A<m.faces.length;A++){a.copy(m.faceNormals[A]),s.vmult(a,a);const L=a.dot(t);L<z&&(z=L,g=A)}if(g<0)return;const C=m.faces[g];C.connectedFaces=[];for(let A=0;A<m.faces.length;A++)for(let L=0;L<m.faces[A].length;L++)C.indexOf(m.faces[A][L])!==-1&&A!==g&&C.connectedFaces.indexOf(A)===-1&&C.connectedFaces.push(A);const B=C.length;for(let A=0;A<B;A++){const L=m.vertices[C[A]],_=m.vertices[C[(A+1)%B]];L.vsub(_,l),d.copy(l),s.vmult(d,d),e.vadd(d,d),u.copy(this.faceNormals[g]),s.vmult(u,u),e.vadd(u,u),d.cross(u,h),h.negate(h),f.copy(L),s.vmult(f,f),e.vadd(f,f);const b=C.connectedFaces[A];p.copy(this.faceNormals[b]);const M=this.getPlaneConstantOfFace(b);y.copy(p),s.vmult(y,y);const S=M-y.dot(e);for(this.clipFaceAgainstPlane(v,x,y,S);v.length;)v.shift();for(;x.length;)v.push(x.shift())}p.copy(this.faceNormals[g]);const F=this.getPlaneConstantOfFace(g);y.copy(p),s.vmult(y,y);const q=F-y.dot(e);for(let A=0;A<v.length;A++){let L=y.dot(v[A])+q;if(L<=i&&(console.log(`clamped: depth=${L} to minDist=${i}`),L=i),L<=o){const _=v[A];if(L<=1e-6){const b={point:_,normal:y,depth:L};r.push(b)}}}}clipFaceAgainstPlane(t,e,s,n){let i,o;const r=t.length;if(r<2)return e;let a=t[t.length-1],l=t[0];i=s.dot(a)+n;for(let d=0;d<r;d++){if(l=t[d],o=s.dot(l)+n,i<0)if(o<0){const u=new c;u.copy(l),e.push(u)}else{const u=new c;a.lerp(l,i/(i-o),u),e.push(u)}else if(o<0){const u=new c;a.lerp(l,i/(i-o),u),e.push(u),e.push(l)}a=l,i=o}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new c);const s=this.vertices,n=this.worldVertices;for(let i=0;i!==this.vertices.length;i++)e.vmult(s[i],n[i]),t.vadd(n[i],n[i]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const s=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let n=0;n<this.vertices.length;n++){const i=s[n];i.x<t.x?t.x=i.x:i.x>e.x&&(e.x=i.x),i.y<t.y?t.y=i.y:i.y>e.y&&(e.y=i.y),i.z<t.z?t.z=i.z:i.z>e.z&&(e.z=i.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new c);const s=this.faceNormals,n=this.worldFaceNormals;for(let i=0;i!==e;i++)t.vmult(s[i],n[i]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let s=0;s!==e.length;s++){const n=e[s].lengthSquared();n>t&&(t=n)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,s,n){const i=this.vertices;let o,r,a,l,d,u,h=new c;for(let f=0;f<i.length;f++){h.copy(i[f]),e.vmult(h,h),t.vadd(h,h);const p=h;(o===void 0||p.x<o)&&(o=p.x),(l===void 0||p.x>l)&&(l=p.x),(r===void 0||p.y<r)&&(r=p.y),(d===void 0||p.y>d)&&(d=p.y),(a===void 0||p.z<a)&&(a=p.z),(u===void 0||p.z>u)&&(u=p.z)}s.set(o,r,a),n.set(l,d,u)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){t===void 0&&(t=new c);const e=this.vertices;for(let s=0;s<e.length;s++)t.vadd(e[s],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const s=this.vertices.length,n=this.vertices;if(e){for(let i=0;i<s;i++){const o=n[i];e.vmult(o,o)}for(let i=0;i<this.faceNormals.length;i++){const o=this.faceNormals[i];e.vmult(o,o)}}if(t)for(let i=0;i<s;i++){const o=n[i];o.vadd(t,o)}}pointIsInside(t){const e=this.vertices,s=this.faces,n=this.faceNormals,i=new c;this.getAveragePointLocal(i);for(let o=0;o<this.faces.length;o++){let r=n[o];const a=e[s[o][0]],l=new c;t.vsub(a,l);const d=r.dot(l),u=new c;i.vsub(a,u);const h=r.dot(u);if(d<0&&h>0||d>0&&h<0)return!1}return-1}static project(t,e,s,n,i){const o=t.vertices.length,r=gs;let a=0,l=0;const d=bs,u=t.vertices;d.setZero(),j.vectorToLocalFrame(s,n,e,r),j.pointToLocalFrame(s,n,d,d);const h=d.dot(r);l=a=u[0].dot(r);for(let f=1;f<o;f++){const p=u[f].dot(r);p>a&&(a=p),p<l&&(l=p)}if(l-=h,a-=h,l>a){const f=l;l=a,a=f}i[0]=a,i[1]=l}}const Ht=[],Gt=[];new c;const gs=new c,bs=new c;class vt extends T{constructor(t){super({type:T.types.BOX});this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,s=this.halfExtents.z,n=c,i=[new n(-t,-e,-s),new n(t,-e,-s),new n(t,e,-s),new n(-t,e,-s),new n(-t,-e,s),new n(t,-e,s),new n(t,e,s),new n(-t,e,s)],o=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],r=[new n(0,0,1),new n(0,1,0),new n(1,0,0)],a=new Pt({vertices:i,faces:o,axes:r});this.convexPolyhedronRepresentation=a,a.material=this.material}calculateLocalInertia(t,e){return e===void 0&&(e=new c),vt.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,s){const n=t;s.x=1/12*e*(2*n.y*2*n.y+2*n.z*2*n.z),s.y=1/12*e*(2*n.x*2*n.x+2*n.z*2*n.z),s.z=1/12*e*(2*n.y*2*n.y+2*n.x*2*n.x)}getSideNormals(t,e){const s=t,n=this.halfExtents;if(s[0].set(n.x,0,0),s[1].set(0,n.y,0),s[2].set(0,0,n.z),s[3].set(-n.x,0,0),s[4].set(0,-n.y,0),s[5].set(0,0,-n.z),e!==void 0)for(let i=0;i!==s.length;i++)e.vmult(s[i],s[i]);return s}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,s){const n=this.halfExtents,i=[[n.x,n.y,n.z],[-n.x,n.y,n.z],[-n.x,-n.y,n.z],[-n.x,-n.y,-n.z],[n.x,-n.y,-n.z],[n.x,n.y,-n.z],[-n.x,n.y,-n.z],[n.x,-n.y,n.z]];for(let o=0;o<i.length;o++)dt.set(i[o][0],i[o][1],i[o][2]),e.vmult(dt,dt),t.vadd(dt,dt),s(dt.x,dt.y,dt.z)}calculateWorldAABB(t,e,s,n){const i=this.halfExtents;st[0].set(i.x,i.y,i.z),st[1].set(-i.x,i.y,i.z),st[2].set(-i.x,-i.y,i.z),st[3].set(-i.x,-i.y,-i.z),st[4].set(i.x,-i.y,-i.z),st[5].set(i.x,i.y,-i.z),st[6].set(-i.x,i.y,-i.z),st[7].set(i.x,-i.y,i.z);const o=st[0];e.vmult(o,o),t.vadd(o,o),n.copy(o),s.copy(o);for(let r=1;r<8;r++){const a=st[r];e.vmult(a,a),t.vadd(a,a);const l=a.x,d=a.y,u=a.z;l>n.x&&(n.x=l),d>n.y&&(n.y=d),u>n.z&&(n.z=u),l<s.x&&(s.x=l),d<s.y&&(s.y=d),u<s.z&&(s.z=u)}}}const dt=new c,st=[new c,new c,new c,new c,new c,new c,new c,new c],Kt={DYNAMIC:1,STATIC:2,KINEMATIC:4},Zt={AWAKE:0,SLEEPY:1,SLEEPING:2};class P extends Se{constructor(t){t===void 0&&(t={});super();this.id=P.idCounter++,this.index=-1,this.world=null,this.vlambda=new c,this.collisionFilterGroup=typeof t.collisionFilterGroup=="number"?t.collisionFilterGroup:1,this.collisionFilterMask=typeof t.collisionFilterMask=="number"?t.collisionFilterMask:-1,this.collisionResponse=typeof t.collisionResponse=="boolean"?t.collisionResponse:!0,this.position=new c,this.previousPosition=new c,this.interpolatedPosition=new c,this.initPosition=new c,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new c,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new c,this.force=new c;const e=typeof t.mass=="number"?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping=typeof t.linearDamping=="number"?t.linearDamping:.01,this.type=e<=0?P.STATIC:P.DYNAMIC,typeof t.type==typeof P.STATIC&&(this.type=t.type),this.allowSleep=typeof t.allowSleep!="undefined"?t.allowSleep:!0,this.sleepState=P.AWAKE,this.sleepSpeedLimit=typeof t.sleepSpeedLimit!="undefined"?t.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof t.sleepTimeLimit!="undefined"?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new c,this.quaternion=new U,this.initQuaternion=new U,this.previousQuaternion=new U,this.interpolatedQuaternion=new U,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new c,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new c,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new c,this.invInertia=new c,this.invInertiaWorld=new et,this.invMassSolve=0,this.invInertiaSolve=new c,this.invInertiaWorldSolve=new et,this.fixedRotation=typeof t.fixedRotation!="undefined"?t.fixedRotation:!1,this.angularDamping=typeof t.angularDamping!="undefined"?t.angularDamping:.01,this.linearFactor=new c(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new c(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new J,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new c,this.isTrigger=Boolean(t.isTrigger),t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=P.AWAKE,this.wakeUpAfterNarrowphase=!1,t===P.SLEEPING&&this.dispatchEvent(P.wakeupEvent)}sleep(){this.sleepState=P.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,s=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),n=this.sleepSpeedLimit**2;e===P.AWAKE&&s<n?(this.sleepState=P.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(P.sleepyEvent)):e===P.SLEEPY&&s>n?this.wakeUp():e===P.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(P.sleepEvent))}}updateSolveMassProperties(){this.sleepState===P.SLEEPING||this.type===P.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return e===void 0&&(e=new c),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return e===void 0&&(e=new c),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return e===void 0&&(e=new c),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return e===void 0&&(e=new c),this.quaternion.vmult(t,e),e}addShape(t,e,s){const n=new c,i=new U;return e&&n.copy(e),s&&i.copy(s),this.shapes.push(t),this.shapeOffsets.push(n),this.shapeOrientations.push(i),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return e===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,s=t.length;let n=0;for(let i=0;i!==s;i++){const o=t[i];o.updateBoundingSphereRadius();const r=e[i].length(),a=o.boundingSphereRadius;r+a>n&&(n=r+a)}this.boundingRadius=n}updateAABB(){const t=this.shapes,e=this.shapeOffsets,s=this.shapeOrientations,n=t.length,i=Es,o=zs,r=this.quaternion,a=this.aabb,l=Cs;for(let d=0;d!==n;d++){const u=t[d];r.vmult(e[d],i),i.vadd(this.position,i),r.mult(s[d],o),u.calculateWorldAABB(i,o,l.lowerBound,l.upperBound),d===0?a.copy(l):a.extend(l)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(!(e.x===e.y&&e.y===e.z&&!t)){const s=Ss,n=Ms;s.setRotationFromQuaternion(this.quaternion),s.transpose(n),s.scale(e,s),s.mmult(n,this.invInertiaWorld)}}applyForce(t,e){if(e===void 0&&(e=new c),this.type!==P.DYNAMIC)return;this.sleepState===P.SLEEPING&&this.wakeUp();const s=Ps;e.cross(t,s),this.force.vadd(t,this.force),this.torque.vadd(s,this.torque)}applyLocalForce(t,e){if(e===void 0&&(e=new c),this.type!==P.DYNAMIC)return;const s=Bs,n=Ns;this.vectorToWorldFrame(t,s),this.vectorToWorldFrame(e,n),this.applyForce(s,n)}applyTorque(t){this.type===P.DYNAMIC&&(this.sleepState===P.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(e===void 0&&(e=new c),this.type!==P.DYNAMIC)return;this.sleepState===P.SLEEPING&&this.wakeUp();const s=e,n=Ts;n.copy(t),n.scale(this.invMass,n),this.velocity.vadd(n,this.velocity);const i=Fs;s.cross(t,i),this.invInertiaWorld.vmult(i,i),this.angularVelocity.vadd(i,this.angularVelocity)}applyLocalImpulse(t,e){if(e===void 0&&(e=new c),this.type!==P.DYNAMIC)return;const s=_s,n=Is;this.vectorToWorldFrame(t,s),this.vectorToWorldFrame(e,n),this.applyImpulse(s,n)}updateMassProperties(){const t=qs;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,s=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),vt.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!s?1/e.x:0,e.y>0&&!s?1/e.y:0,e.z>0&&!s?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const s=new c;return t.vsub(this.position,s),this.angularVelocity.cross(s,e),this.velocity.vadd(e,e),e}integrate(t,e,s){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===P.DYNAMIC||this.type===P.KINEMATIC)||this.sleepState===P.SLEEPING)return;const n=this.velocity,i=this.angularVelocity,o=this.position,r=this.force,a=this.torque,l=this.quaternion,d=this.invMass,u=this.invInertiaWorld,h=this.linearFactor,f=d*t;n.x+=r.x*f*h.x,n.y+=r.y*f*h.y,n.z+=r.z*f*h.z;const p=u.elements,y=this.angularFactor,m=a.x*y.x,w=a.y*y.y,v=a.z*y.z;i.x+=t*(p[0]*m+p[1]*w+p[2]*v),i.y+=t*(p[3]*m+p[4]*w+p[5]*v),i.z+=t*(p[6]*m+p[7]*w+p[8]*v),o.x+=n.x*t,o.y+=n.y*t,o.z+=n.z*t,l.integrate(this.angularVelocity,t,this.angularFactor,l),e&&(s?l.normalizeFast():l.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}P.idCounter=0;P.COLLIDE_EVENT_NAME="collide";P.DYNAMIC=Kt.DYNAMIC;P.STATIC=Kt.STATIC;P.KINEMATIC=Kt.KINEMATIC;P.AWAKE=Zt.AWAKE;P.SLEEPY=Zt.SLEEPY;P.SLEEPING=Zt.SLEEPING;P.wakeupEvent={type:"wakeup"};P.sleepyEvent={type:"sleepy"};P.sleepEvent={type:"sleep"};const Es=new c,zs=new U,Cs=new J,Ss=new et,Ms=new et,As=new et,Ps=new c,Bs=new c,Ns=new c,Ts=new c,Fs=new c,_s=new c,Is=new c,qs=new c;class Rs{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,s){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return!((t.collisionFilterGroup&e.collisionFilterMask)===0||(e.collisionFilterGroup&t.collisionFilterMask)===0||((t.type&P.STATIC)!==0||t.sleepState===P.SLEEPING)&&((e.type&P.STATIC)!==0||e.sleepState===P.SLEEPING))}intersectionTest(t,e,s,n){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,s,n):this.doBoundingSphereBroadphase(t,e,s,n)}doBoundingSphereBroadphase(t,e,s,n){const i=Ls;e.position.vsub(t.position,i);const o=(t.boundingRadius+e.boundingRadius)**2;i.lengthSquared()<o&&(s.push(t),n.push(e))}doBoundingBoxBroadphase(t,e,s,n){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(s.push(t),n.push(e))}makePairsUnique(t,e){const s=ks,n=js,i=Os,o=t.length;for(let r=0;r!==o;r++)n[r]=t[r],i[r]=e[r];t.length=0,e.length=0;for(let r=0;r!==o;r++){const a=n[r].id,l=i[r].id,d=a<l?`${a},${l}`:`${l},${a}`;s[d]=r,s.keys.push(d)}for(let r=0;r!==s.keys.length;r++){const a=s.keys.pop(),l=s[a];t.push(n[l]),e.push(i[l]),delete s[a]}}setWorld(t){}static boundingSphereCheck(t,e){const s=new c;t.position.vsub(e.position,s);const n=t.shapes[0],i=e.shapes[0];return Math.pow(n.boundingSphereRadius+i.boundingSphereRadius,2)>s.lengthSquared()}aabbQuery(t,e,s){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const Ls=new c;new c;new U;new c;const ks={keys:[]},js=[],Os=[];new c;new c;new c;class Ws extends Rs{constructor(){super()}collisionPairs(t,e,s){const n=t.bodies,i=n.length;let o,r;for(let a=0;a!==i;a++)for(let l=0;l!==a;l++)o=n[a],r=n[l],!!this.needBroadphaseCollision(o,r)&&this.intersectionTest(o,r,e,s)}aabbQuery(t,e,s){s===void 0&&(s=[]);for(let n=0;n<t.bodies.length;n++){const i=t.bodies[n];i.aabbNeedsUpdate&&i.updateAABB(),i.aabb.overlaps(e)&&s.push(i)}return s}}class Vt{constructor(){this.rayFromWorld=new c,this.rayToWorld=new c,this.hitNormalWorld=new c,this.hitPointWorld=new c,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,s,n,i,o,r){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(s),this.hitPointWorld.copy(n),this.shape=i,this.body=o,this.distance=r}}let Me,Ae,Pe,Be,Ne,Te,Fe;const Jt={CLOSEST:1,ANY:2,ALL:4};Me=T.types.SPHERE;Ae=T.types.PLANE;Pe=T.types.BOX;Be=T.types.CYLINDER;Ne=T.types.CONVEXPOLYHEDRON;Te=T.types.HEIGHTFIELD;Fe=T.types.TRIMESH;class Y{get[Me](){return this._intersectSphere}get[Ae](){return this._intersectPlane}get[Pe](){return this._intersectBox}get[Be](){return this._intersectConvex}get[Ne](){return this._intersectConvex}get[Te](){return this._intersectHeightfield}get[Fe](){return this._intersectTrimesh}constructor(t,e){t===void 0&&(t=new c),e===void 0&&(e=new c),this.from=t.clone(),this.to=e.clone(),this.direction=new c,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=Y.ANY,this.result=new Vt,this.hasHit=!1,this.callback=s=>{}}intersectWorld(t,e){return this.mode=e.mode||Y.ANY,this.result=e.result||new Vt,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=typeof e.collisionFilterMask!="undefined"?e.collisionFilterMask:-1,this.collisionFilterGroup=typeof e.collisionFilterGroup!="undefined"?e.collisionFilterGroup:-1,this.checkCollisionResponse=typeof e.checkCollisionResponse!="undefined"?e.checkCollisionResponse:!0,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(ae),Yt.length=0,t.broadphase.aabbQuery(t,ae,Yt),this.intersectBodies(Yt),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const s=this.checkCollisionResponse;if(s&&!t.collisionResponse||(this.collisionFilterGroup&t.collisionFilterMask)===0||(t.collisionFilterGroup&this.collisionFilterMask)===0)return;const n=Vs,i=Ds;for(let o=0,r=t.shapes.length;o<r;o++){const a=t.shapes[o];if(!(s&&!a.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[o],i),t.quaternion.vmult(t.shapeOffsets[o],n),n.vadd(t.position,n),this.intersectShape(a,i,n,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let s=0,n=t.length;!this.result.shouldStop&&s<n;s++)this.intersectBody(t[s])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,s,n){const i=this.from;if(nn(i,this.direction,s)>t.boundingSphereRadius)return;const r=this[t.type];r&&r.call(this,t,e,s,n,t)}_intersectBox(t,e,s,n,i){return this._intersectConvex(t.convexPolyhedronRepresentation,e,s,n,i)}_intersectPlane(t,e,s,n,i){const o=this.from,r=this.to,a=this.direction,l=new c(0,0,1);e.vmult(l,l);const d=new c;o.vsub(s,d);const u=d.dot(l);r.vsub(s,d);const h=d.dot(l);if(u*h>0||o.distanceTo(r)<u)return;const f=l.dot(a);if(Math.abs(f)<this.precision)return;const p=new c,y=new c,m=new c;o.vsub(s,p);const w=-l.dot(p)/f;a.scale(w,y),o.vadd(y,m),this.reportIntersection(l,m,i,n,-1)}getAABB(t){const{lowerBound:e,upperBound:s}=t,n=this.to,i=this.from;e.x=Math.min(n.x,i.x),e.y=Math.min(n.y,i.y),e.z=Math.min(n.z,i.z),s.x=Math.max(n.x,i.x),s.y=Math.max(n.y,i.y),s.z=Math.max(n.z,i.z)}_intersectHeightfield(t,e,s,n,i){t.data,t.elementSize;const o=Hs;o.from.copy(this.from),o.to.copy(this.to),j.pointToLocalFrame(s,e,o.from,o.from),j.pointToLocalFrame(s,e,o.to,o.to),o.updateDirection();const r=Gs;let a,l,d,u;a=l=0,d=u=t.data.length-1;const h=new J;o.getAABB(h),t.getIndexOfPosition(h.lowerBound.x,h.lowerBound.y,r,!0),a=Math.max(a,r[0]),l=Math.max(l,r[1]),t.getIndexOfPosition(h.upperBound.x,h.upperBound.y,r,!0),d=Math.min(d,r[0]+1),u=Math.min(u,r[1]+1);for(let f=a;f<d;f++)for(let p=l;p<u;p++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(f,p,h),!!h.overlapsRay(o)){if(t.getConvexTrianglePillar(f,p,!1),j.pointToWorldFrame(s,e,t.pillarOffset,It),this._intersectConvex(t.pillarConvex,e,It,n,i,le),this.result.shouldStop)return;t.getConvexTrianglePillar(f,p,!0),j.pointToWorldFrame(s,e,t.pillarOffset,It),this._intersectConvex(t.pillarConvex,e,It,n,i,le)}}}_intersectSphere(t,e,s,n,i){const o=this.from,r=this.to,a=t.radius,l=(r.x-o.x)**2+(r.y-o.y)**2+(r.z-o.z)**2,d=2*((r.x-o.x)*(o.x-s.x)+(r.y-o.y)*(o.y-s.y)+(r.z-o.z)*(o.z-s.z)),u=(o.x-s.x)**2+(o.y-s.y)**2+(o.z-s.z)**2-a**2,h=d**2-4*l*u,f=Ys,p=Us;if(!(h<0))if(h===0)o.lerp(r,h,f),f.vsub(s,p),p.normalize(),this.reportIntersection(p,f,i,n,-1);else{const y=(-d-Math.sqrt(h))/(2*l),m=(-d+Math.sqrt(h))/(2*l);if(y>=0&&y<=1&&(o.lerp(r,y,f),f.vsub(s,p),p.normalize(),this.reportIntersection(p,f,i,n,-1)),this.result.shouldStop)return;m>=0&&m<=1&&(o.lerp(r,m,f),f.vsub(s,p),p.normalize(),this.reportIntersection(p,f,i,n,-1))}}_intersectConvex(t,e,s,n,i,o){const r=Xs,a=he,l=o&&o.faceList||null,d=t.faces,u=t.vertices,h=t.faceNormals,f=this.direction,p=this.from,y=this.to,m=p.distanceTo(y),w=l?l.length:d.length,v=this.result;for(let x=0;!v.shouldStop&&x<w;x++){const g=l?l[x]:x,z=d[g],C=h[g],B=e,F=s;a.copy(u[z[0]]),B.vmult(a,a),a.vadd(F,a),a.vsub(p,a),B.vmult(C,r);const q=f.dot(r);if(Math.abs(q)<this.precision)continue;const A=r.dot(a)/q;if(!(A<0)){f.scale(A,Z),Z.vadd(p,Z),tt.copy(u[z[0]]),B.vmult(tt,tt),F.vadd(tt,tt);for(let L=1;!v.shouldStop&&L<z.length-1;L++){nt.copy(u[z[L]]),it.copy(u[z[L+1]]),B.vmult(nt,nt),B.vmult(it,it),F.vadd(nt,nt),F.vadd(it,it);const _=Z.distanceTo(p);!(Y.pointInTriangle(Z,tt,nt,it)||Y.pointInTriangle(Z,nt,tt,it))||_>m||this.reportIntersection(r,Z,i,n,g)}}}}_intersectTrimesh(t,e,s,n,i,o){const r=$s,a=en,l=sn,d=he,u=Ks,h=Zs,f=Js,p=tn,y=Qs,m=t.indices;t.vertices;const w=this.from,v=this.to,x=this.direction;l.position.copy(s),l.quaternion.copy(e),j.vectorToLocalFrame(s,e,x,u),j.pointToLocalFrame(s,e,w,h),j.pointToLocalFrame(s,e,v,f),f.x*=t.scale.x,f.y*=t.scale.y,f.z*=t.scale.z,h.x*=t.scale.x,h.y*=t.scale.y,h.z*=t.scale.z,f.vsub(h,u),u.normalize();const g=h.distanceSquared(f);t.tree.rayQuery(this,l,a);for(let z=0,C=a.length;!this.result.shouldStop&&z!==C;z++){const B=a[z];t.getNormal(B,r),t.getVertex(m[B*3],tt),tt.vsub(h,d);const F=u.dot(r),q=r.dot(d)/F;if(q<0)continue;u.scale(q,Z),Z.vadd(h,Z),t.getVertex(m[B*3+1],nt),t.getVertex(m[B*3+2],it);const A=Z.distanceSquared(h);!(Y.pointInTriangle(Z,nt,tt,it)||Y.pointInTriangle(Z,tt,nt,it))||A>g||(j.vectorToWorldFrame(e,r,y),j.pointToWorldFrame(s,e,Z,p),this.reportIntersection(y,p,i,n,B))}a.length=0}reportIntersection(t,e,s,n,i){const o=this.from,r=this.to,a=o.distanceTo(e),l=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(l.hitFaceIndex=typeof i!="undefined"?i:-1,this.mode){case Y.ALL:this.hasHit=!0,l.set(o,r,t,e,s,n,a),l.hasHit=!0,this.callback(l);break;case Y.CLOSEST:(a<l.distance||!l.hasHit)&&(this.hasHit=!0,l.hasHit=!0,l.set(o,r,t,e,s,n,a));break;case Y.ANY:this.hasHit=!0,l.hasHit=!0,l.set(o,r,t,e,s,n,a),l.shouldStop=!0;break}}static pointInTriangle(t,e,s,n){n.vsub(e,mt),s.vsub(e,Ct),t.vsub(e,Ut);const i=mt.dot(mt),o=mt.dot(Ct),r=mt.dot(Ut),a=Ct.dot(Ct),l=Ct.dot(Ut);let d,u;return(d=a*r-o*l)>=0&&(u=i*l-o*r)>=0&&d+u<i*a-o*o}}Y.CLOSEST=Jt.CLOSEST;Y.ANY=Jt.ANY;Y.ALL=Jt.ALL;const ae=new J,Yt=[],Ct=new c,Ut=new c,Vs=new c,Ds=new U,Z=new c,tt=new c,nt=new c,it=new c;new c;new Vt;const le={faceList:[0]},It=new c,Hs=new Y,Gs=[],Ys=new c,Us=new c,Xs=new c;new c;new c;const he=new c,$s=new c,Ks=new c,Zs=new c,Js=new c,Qs=new c,tn=new c;new J;const en=[],sn=new j,mt=new c,qt=new c;function nn(N,t,e){e.vsub(N,mt);const s=mt.dot(t);return t.scale(s,qt),qt.vadd(N,qt),e.distanceTo(qt)}class _e{static defaults(t,e){t===void 0&&(t={});for(let s in e)s in t||(t[s]=e[s]);return t}}class Dt{constructor(t,e,s){s===void 0&&(s={}),s=_e.defaults(s,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=Dt.idCounter++,this.collideConnected=s.collideConnected,s.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!0}disable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!1}}Dt.idCounter=0;class de{constructor(){this.spatial=new c,this.rotational=new c}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class Nt{constructor(t,e,s,n){s===void 0&&(s=-1e6),n===void 0&&(n=1e6),this.id=Nt.idCounter++,this.minForce=s,this.maxForce=n,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new de,this.jacobianElementB=new de,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,s){const n=e,i=t,o=s;this.a=4/(o*(1+4*n)),this.b=4*n/(1+4*n),this.eps=4/(o*o*i*(1+4*n))}computeB(t,e,s){const n=this.computeGW(),i=this.computeGq(),o=this.computeGiMf();return-i*t-n*e-o*s}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.position,o=n.position;return t.spatial.dot(i)+e.spatial.dot(o)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.velocity,o=n.velocity,r=s.angularVelocity,a=n.angularVelocity;return t.multiplyVectors(i,r)+e.multiplyVectors(o,a)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.vlambda,o=n.vlambda,r=s.wlambda,a=n.wlambda;return t.multiplyVectors(i,r)+e.multiplyVectors(o,a)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.force,o=s.torque,r=n.force,a=n.torque,l=s.invMassSolve,d=n.invMassSolve;return i.scale(l,ue),r.scale(d,pe),s.invInertiaWorldSolve.vmult(o,fe),n.invInertiaWorldSolve.vmult(a,me),t.multiplyVectors(ue,fe)+e.multiplyVectors(pe,me)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.invMassSolve,o=n.invMassSolve,r=s.invInertiaWorldSolve,a=n.invInertiaWorldSolve;let l=i+o;return r.vmult(t.rotational,Rt),l+=Rt.dot(t.rotational),a.vmult(e.rotational,Rt),l+=Rt.dot(e.rotational),l}addToWlambda(t){const e=this.jacobianElementA,s=this.jacobianElementB,n=this.bi,i=this.bj,o=on;n.vlambda.addScaledVector(n.invMassSolve*t,e.spatial,n.vlambda),i.vlambda.addScaledVector(i.invMassSolve*t,s.spatial,i.vlambda),n.invInertiaWorldSolve.vmult(e.rotational,o),n.wlambda.addScaledVector(t,o,n.wlambda),i.invInertiaWorldSolve.vmult(s.rotational,o),i.wlambda.addScaledVector(t,o,i.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}Nt.idCounter=0;const ue=new c,pe=new c,fe=new c,me=new c,Rt=new c,on=new c;class Wt extends Nt{constructor(t,e,s){s===void 0&&(s=1e6);super(t,e,0,s);this.restitution=0,this.ri=new c,this.rj=new c,this.ni=new c}computeB(t){const e=this.a,s=this.b,n=this.bi,i=this.bj,o=this.ri,r=this.rj,a=rn,l=cn,d=n.velocity,u=n.angularVelocity;n.force,n.torque;const h=i.velocity,f=i.angularVelocity;i.force,i.torque;const p=an,y=this.jacobianElementA,m=this.jacobianElementB,w=this.ni;o.cross(w,a),r.cross(w,l),w.negate(y.spatial),a.negate(y.rotational),m.spatial.copy(w),m.rotational.copy(l),p.copy(i.position),p.vadd(r,p),p.vsub(n.position,p),p.vsub(o,p);const v=w.dot(p),x=this.restitution+1,g=x*h.dot(w)-x*d.dot(w)+f.dot(l)-u.dot(a),z=this.computeGiMf();return-v*e-g*s-t*z}getImpactVelocityAlongNormal(){const t=ln,e=hn,s=dn,n=un,i=pn;return this.bi.position.vadd(this.ri,s),this.bj.position.vadd(this.rj,n),this.bi.getVelocityAtWorldPoint(s,t),this.bj.getVelocityAtWorldPoint(n,e),t.vsub(e,i),this.ni.dot(i)}}const rn=new c,cn=new c,an=new c,ln=new c,hn=new c,dn=new c,un=new c,pn=new c;class ve extends Dt{constructor(t,e,s,n,i){e===void 0&&(e=new c),n===void 0&&(n=new c),i===void 0&&(i=1e6);super(t,s);this.pivotA=e.clone(),this.pivotB=n.clone();const o=this.equationX=new Wt(t,s),r=this.equationY=new Wt(t,s),a=this.equationZ=new Wt(t,s);this.equations.push(o,r,a),o.minForce=r.minForce=a.minForce=-i,o.maxForce=r.maxForce=a.maxForce=i,o.ni.set(1,0,0),r.ni.set(0,1,0),a.ni.set(0,0,1)}update(){const t=this.bodyA,e=this.bodyB,s=this.equationX,n=this.equationY,i=this.equationZ;t.quaternion.vmult(this.pivotA,s.ri),e.quaternion.vmult(this.pivotB,s.rj),n.ri.copy(s.ri),n.rj.copy(s.rj),i.ri.copy(s.ri),i.rj.copy(s.rj)}}new c;new c;new c;new c;new c;new c;new c;new c;new c;new c;class ye extends Nt{constructor(t,e,s){super(t,e,-s,s);this.ri=new c,this.rj=new c,this.t=new c}computeB(t){this.a;const e=this.b;this.bi,this.bj;const s=this.ri,n=this.rj,i=fn,o=mn,r=this.t;s.cross(r,i),n.cross(r,o);const a=this.jacobianElementA,l=this.jacobianElementB;r.negate(a.spatial),i.negate(a.rotational),l.spatial.copy(r),l.rotational.copy(o);const d=this.computeGW(),u=this.computeGiMf();return-d*e-t*u}}const fn=new c,mn=new c;class Tt{constructor(t,e,s){s=_e.defaults(s,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=Tt.idCounter++,this.materials=[t,e],this.friction=s.friction,this.restitution=s.restitution,this.contactEquationStiffness=s.contactEquationStiffness,this.contactEquationRelaxation=s.contactEquationRelaxation,this.frictionEquationStiffness=s.frictionEquationStiffness,this.frictionEquationRelaxation=s.frictionEquationRelaxation}}Tt.idCounter=0;class Ft{constructor(t){t===void 0&&(t={});let e="";typeof t=="string"&&(e=t,t={}),this.name=e,this.id=Ft.idCounter++,this.friction=typeof t.friction!="undefined"?t.friction:-1,this.restitution=typeof t.restitution!="undefined"?t.restitution:-1}}Ft.idCounter=0;new c;new c;new c;new c;new c;new c;new c;new c;new c;new c;new c;new c;new c;new c;new c;new c;new c;new c;new c;new Y;new c;new c;new c;new c(1,0,0),new c(0,1,0),new c(0,0,1);new c;new c;new c;new c;new c;new c;new c;new c;new c;new c;new c;class we extends T{constructor(t){super({type:T.types.SPHERE});if(this.radius=t!==void 0?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){e===void 0&&(e=new c);const s=2*t*this.radius*this.radius/5;return e.x=s,e.y=s,e.z=s,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,s,n){const i=this.radius,o=["x","y","z"];for(let r=0;r<o.length;r++){const a=o[r];s[a]=t[a]-i,n[a]=t[a]+i}}}new c;new c;new c;new c;new c;new c;new c;new c;new c;class vn extends T{constructor(){super({type:T.types.PLANE});this.worldNormal=new c,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(t){const e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(t,e){return e===void 0&&(e=new c),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,s,n){rt.set(0,0,1),e.vmult(rt,rt);const i=Number.MAX_VALUE;s.set(-i,-i,-i),n.set(i,i,i),rt.x===1?n.x=t.x:rt.x===-1&&(s.x=t.x),rt.y===1?n.y=t.y:rt.y===-1&&(s.y=t.y),rt.z===1?n.z=t.z:rt.z===-1&&(s.z=t.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const rt=new c;new c;new c;new c;new c;new c;new c;new c;new c;new c;new c;new J;new c;new J;new c;new c;new c;new c;new c;new c;new c;new J;new c;new j;new J;class Ie{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){t.enabled&&!t.bi.isTrigger&&!t.bj.isTrigger&&this.equations.push(t)}removeEquation(t){const e=this.equations,s=e.indexOf(t);s!==-1&&e.splice(s,1)}removeAllEquations(){this.equations.length=0}}class qe extends Ie{constructor(){super();this.iterations=10,this.tolerance=1e-7}solve(t,e){let s=0;const n=this.iterations,i=this.tolerance*this.tolerance,o=this.equations,r=o.length,a=e.bodies,l=a.length,d=t;let u,h,f,p,y,m;if(r!==0)for(let g=0;g!==l;g++)a[g].updateSolveMassProperties();const w=wn,v=xn,x=yn;w.length=r,v.length=r,x.length=r;for(let g=0;g!==r;g++){const z=o[g];x[g]=0,v[g]=z.computeB(d),w[g]=1/z.computeC()}if(r!==0){for(let C=0;C!==l;C++){const B=a[C],F=B.vlambda,q=B.wlambda;F.set(0,0,0),q.set(0,0,0)}for(s=0;s!==n;s++){p=0;for(let C=0;C!==r;C++){const B=o[C];u=v[C],h=w[C],m=x[C],y=B.computeGWlambda(),f=h*(u-y-B.eps*m),m+f<B.minForce?f=B.minForce-m:m+f>B.maxForce&&(f=B.maxForce-m),x[C]+=f,p+=f>0?f:-f,B.addToWlambda(f)}if(p*p<i)break}for(let C=0;C!==l;C++){const B=a[C],F=B.velocity,q=B.angularVelocity;B.vlambda.vmul(B.linearFactor,B.vlambda),F.vadd(B.vlambda,F),B.wlambda.vmul(B.angularFactor,B.wlambda),q.vadd(B.wlambda,q)}let g=o.length;const z=1/d;for(;g--;)o[g].multiplier=x[g]*z}return s}}const yn=[],wn=[],xn=[];class gn extends Ie{constructor(t){super();for(this.iterations=10,this.tolerance=1e-7,this.subsolver=t,this.nodes=[],this.nodePool=[];this.nodePool.length<128;)this.nodePool.push(this.createNode())}createNode(){return{body:null,children:[],eqs:[],visited:!1}}solve(t,e){const s=bn,n=this.nodePool,i=e.bodies,o=this.equations,r=o.length,a=i.length,l=this.subsolver;for(;n.length<a;)n.push(this.createNode());s.length=a;for(let p=0;p<a;p++)s[p]=n[p];for(let p=0;p!==a;p++){const y=s[p];y.body=i[p],y.children.length=0,y.eqs.length=0,y.visited=!1}for(let p=0;p!==r;p++){const y=o[p],m=i.indexOf(y.bi),w=i.indexOf(y.bj),v=s[m],x=s[w];v.children.push(x),v.eqs.push(y),x.children.push(v),x.eqs.push(y)}let d,u=0,h=En;l.tolerance=this.tolerance,l.iterations=this.iterations;const f=zn;for(;d=Re(s);){h.length=0,f.bodies.length=0,Sn(d,Mn,f.bodies,h);const p=h.length;h=h.sort(An);for(let y=0;y!==p;y++)l.addEquation(h[y]);l.solve(t,f),l.removeAllEquations(),u++}return u}}const bn=[],En=[],zn={bodies:[]},Cn=P.STATIC;function Re(N){const t=N.length;for(let e=0;e!==t;e++){const s=N[e];if(!s.visited&&!(s.body.type&Cn))return s}return!1}const Lt=[];function Sn(N,t,e,s){for(Lt.push(N),N.visited=!0,t(N,e,s);Lt.length;){const n=Lt.pop();let i;for(;i=Re(n.children);)i.visited=!0,t(i,e,s),Lt.push(i)}}function Mn(N,t,e){t.push(N.body);const s=N.eqs.length;for(let n=0;n!==s;n++){const i=N.eqs[n];e.includes(i)||e.push(i)}}function An(N,t){return t.id-N.id}class Pn{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class Bn extends Pn{constructor(){super(...arguments);this.type=c}constructObject(){return new c}}const H={sphereSphere:T.types.SPHERE,spherePlane:T.types.SPHERE|T.types.PLANE,boxBox:T.types.BOX|T.types.BOX,sphereBox:T.types.SPHERE|T.types.BOX,planeBox:T.types.PLANE|T.types.BOX,convexConvex:T.types.CONVEXPOLYHEDRON,sphereConvex:T.types.SPHERE|T.types.CONVEXPOLYHEDRON,planeConvex:T.types.PLANE|T.types.CONVEXPOLYHEDRON,boxConvex:T.types.BOX|T.types.CONVEXPOLYHEDRON,sphereHeightfield:T.types.SPHERE|T.types.HEIGHTFIELD,boxHeightfield:T.types.BOX|T.types.HEIGHTFIELD,convexHeightfield:T.types.CONVEXPOLYHEDRON|T.types.HEIGHTFIELD,sphereParticle:T.types.PARTICLE|T.types.SPHERE,planeParticle:T.types.PLANE|T.types.PARTICLE,boxParticle:T.types.BOX|T.types.PARTICLE,convexParticle:T.types.PARTICLE|T.types.CONVEXPOLYHEDRON,cylinderCylinder:T.types.CYLINDER,sphereCylinder:T.types.SPHERE|T.types.CYLINDER,planeCylinder:T.types.PLANE|T.types.CYLINDER,boxCylinder:T.types.BOX|T.types.CYLINDER,convexCylinder:T.types.CONVEXPOLYHEDRON|T.types.CYLINDER,heightfieldCylinder:T.types.HEIGHTFIELD|T.types.CYLINDER,particleCylinder:T.types.PARTICLE|T.types.CYLINDER,sphereTrimesh:T.types.SPHERE|T.types.TRIMESH,planeTrimesh:T.types.PLANE|T.types.TRIMESH};class Nn{get[H.sphereSphere](){return this.sphereSphere}get[H.spherePlane](){return this.spherePlane}get[H.boxBox](){return this.boxBox}get[H.sphereBox](){return this.sphereBox}get[H.planeBox](){return this.planeBox}get[H.convexConvex](){return this.convexConvex}get[H.sphereConvex](){return this.sphereConvex}get[H.planeConvex](){return this.planeConvex}get[H.boxConvex](){return this.boxConvex}get[H.sphereHeightfield](){return this.sphereHeightfield}get[H.boxHeightfield](){return this.boxHeightfield}get[H.convexHeightfield](){return this.convexHeightfield}get[H.sphereParticle](){return this.sphereParticle}get[H.planeParticle](){return this.planeParticle}get[H.boxParticle](){return this.boxParticle}get[H.convexParticle](){return this.convexParticle}get[H.cylinderCylinder](){return this.convexConvex}get[H.sphereCylinder](){return this.sphereConvex}get[H.planeCylinder](){return this.planeConvex}get[H.boxCylinder](){return this.boxConvex}get[H.convexCylinder](){return this.convexConvex}get[H.heightfieldCylinder](){return this.heightfieldCylinder}get[H.particleCylinder](){return this.particleCylinder}get[H.sphereTrimesh](){return this.sphereTrimesh}get[H.planeTrimesh](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new Bn,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,s,n,i,o){let r;this.contactPointPool.length?(r=this.contactPointPool.pop(),r.bi=t,r.bj=e):r=new Wt(t,e),r.enabled=t.collisionResponse&&e.collisionResponse&&s.collisionResponse&&n.collisionResponse;const a=this.currentContactMaterial;r.restitution=a.restitution,r.setSpookParams(a.contactEquationStiffness,a.contactEquationRelaxation,this.world.dt);const l=s.material||t.material,d=n.material||e.material;return l&&d&&l.restitution>=0&&d.restitution>=0&&(r.restitution=l.restitution*d.restitution),r.si=i||s,r.sj=o||n,r}createFrictionEquationsFromContact(t,e){const s=t.bi,n=t.bj,i=t.si,o=t.sj,r=this.world,a=this.currentContactMaterial;let l=a.friction;const d=i.material||s.material,u=o.material||n.material;if(d&&u&&d.friction>=0&&u.friction>=0&&(l=d.friction*u.friction),l>0){const h=l*r.gravity.length();let f=s.invMass+n.invMass;f>0&&(f=1/f);const p=this.frictionEquationPool,y=p.length?p.pop():new ye(s,n,h*f),m=p.length?p.pop():new ye(s,n,h*f);return y.bi=m.bi=s,y.bj=m.bj=n,y.minForce=m.minForce=-h*f,y.maxForce=m.maxForce=h*f,y.ri.copy(t.ri),y.rj.copy(t.rj),m.ri.copy(t.ri),m.rj.copy(t.rj),t.ni.tangents(y.t,m.t),y.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),m.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),y.enabled=m.enabled=t.enabled,e.push(y,m),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||t===1)return;const s=this.frictionResult[this.frictionResult.length-2],n=this.frictionResult[this.frictionResult.length-1];ft.setZero(),gt.setZero(),bt.setZero();const i=e.bi;e.bj;for(let r=0;r!==t;r++)e=this.result[this.result.length-1-r],e.bi!==i?(ft.vadd(e.ni,ft),gt.vadd(e.ri,gt),bt.vadd(e.rj,bt)):(ft.vsub(e.ni,ft),gt.vadd(e.rj,gt),bt.vadd(e.ri,bt));const o=1/t;gt.scale(o,s.ri),bt.scale(o,s.rj),n.ri.copy(s.ri),n.rj.copy(s.rj),ft.normalize(),ft.tangents(s.t,n.t)}getContacts(t,e,s,n,i,o,r){this.contactPointPool=i,this.frictionEquationPool=r,this.result=n,this.frictionResult=o;const a=_n,l=In,d=Tn,u=Fn;for(let h=0,f=t.length;h!==f;h++){const p=t[h],y=e[h];let m=null;p.material&&y.material&&(m=s.getContactMaterial(p.material,y.material)||null);const w=p.type&P.KINEMATIC&&y.type&P.STATIC||p.type&P.STATIC&&y.type&P.KINEMATIC||p.type&P.KINEMATIC&&y.type&P.KINEMATIC;for(let v=0;v<p.shapes.length;v++){p.quaternion.mult(p.shapeOrientations[v],a),p.quaternion.vmult(p.shapeOffsets[v],d),d.vadd(p.position,d);const x=p.shapes[v];for(let g=0;g<y.shapes.length;g++){y.quaternion.mult(y.shapeOrientations[g],l),y.quaternion.vmult(y.shapeOffsets[g],u),u.vadd(y.position,u);const z=y.shapes[g];if(!(x.collisionFilterMask&z.collisionFilterGroup&&z.collisionFilterMask&x.collisionFilterGroup)||d.distanceTo(u)>x.boundingSphereRadius+z.boundingSphereRadius)continue;let C=null;x.material&&z.material&&(C=s.getContactMaterial(x.material,z.material)||null),this.currentContactMaterial=C||m||s.defaultContactMaterial;const B=x.type|z.type,F=this[B];if(F){let q=!1;x.type<z.type?q=F.call(this,x,z,d,u,a,l,p,y,x,z,w):q=F.call(this,z,x,u,d,l,a,y,p,x,z,w),q&&w&&(s.shapeOverlapKeeper.set(x.id,z.id),s.bodyOverlapKeeper.set(p.id,y.id))}}}}}sphereSphere(t,e,s,n,i,o,r,a,l,d,u){if(u)return s.distanceSquared(n)<(t.radius+e.radius)**2;const h=this.createContactEquation(r,a,t,e,l,d);n.vsub(s,h.ni),h.ni.normalize(),h.ri.copy(h.ni),h.rj.copy(h.ni),h.ri.scale(t.radius,h.ri),h.rj.scale(-e.radius,h.rj),h.ri.vadd(s,h.ri),h.ri.vsub(r.position,h.ri),h.rj.vadd(n,h.rj),h.rj.vsub(a.position,h.rj),this.result.push(h),this.createFrictionEquationsFromContact(h,this.frictionResult)}spherePlane(t,e,s,n,i,o,r,a,l,d,u){const h=this.createContactEquation(r,a,t,e,l,d);if(h.ni.set(0,0,1),o.vmult(h.ni,h.ni),h.ni.negate(h.ni),h.ni.normalize(),h.ni.scale(t.radius,h.ri),s.vsub(n,kt),h.ni.scale(h.ni.dot(kt),xe),kt.vsub(xe,h.rj),-kt.dot(h.ni)<=t.radius){if(u)return!0;const f=h.ri,p=h.rj;f.vadd(s,f),f.vsub(r.position,f),p.vadd(n,p),p.vsub(a.position,p),this.result.push(h),this.createFrictionEquationsFromContact(h,this.frictionResult)}}boxBox(t,e,s,n,i,o,r,a,l,d,u){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,s,n,i,o,r,a,t,e,u)}sphereBox(t,e,s,n,i,o,r,a,l,d,u){const h=this.v3pool,f=ri;s.vsub(n,jt),e.getSideNormals(f,o);const p=t.radius;let y=!1;const m=ai,w=li,v=hi;let x=null,g=0,z=0,C=0,B=null;for(let E=0,D=f.length;E!==D&&y===!1;E++){const k=ni;k.copy(f[E]);const I=k.length();k.normalize();const $=jt.dot(k);if($<I+p&&$>0){const G=ii,R=oi;G.copy(f[(E+1)%3]),R.copy(f[(E+2)%3]);const Q=G.length(),yt=R.length();G.normalize(),R.normalize();const Et=jt.dot(G),ut=jt.dot(R);if(Et<Q&&Et>-Q&&ut<yt&&ut>-yt){const wt=Math.abs($-I-p);if((B===null||wt<B)&&(B=wt,z=Et,C=ut,x=I,m.copy(k),w.copy(G),v.copy(R),g++,u))return!0}}}if(g){y=!0;const E=this.createContactEquation(r,a,t,e,l,d);m.scale(-p,E.ri),E.ni.copy(m),E.ni.negate(E.ni),m.scale(x,m),w.scale(z,w),m.vadd(w,m),v.scale(C,v),m.vadd(v,E.rj),E.ri.vadd(s,E.ri),E.ri.vsub(r.position,E.ri),E.rj.vadd(n,E.rj),E.rj.vsub(a.position,E.rj),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult)}let F=h.get();const q=ci;for(let E=0;E!==2&&!y;E++)for(let D=0;D!==2&&!y;D++)for(let k=0;k!==2&&!y;k++)if(F.set(0,0,0),E?F.vadd(f[0],F):F.vsub(f[0],F),D?F.vadd(f[1],F):F.vsub(f[1],F),k?F.vadd(f[2],F):F.vsub(f[2],F),n.vadd(F,q),q.vsub(s,q),q.lengthSquared()<p*p){if(u)return!0;y=!0;const I=this.createContactEquation(r,a,t,e,l,d);I.ri.copy(q),I.ri.normalize(),I.ni.copy(I.ri),I.ri.scale(p,I.ri),I.rj.copy(F),I.ri.vadd(s,I.ri),I.ri.vsub(r.position,I.ri),I.rj.vadd(n,I.rj),I.rj.vsub(a.position,I.rj),this.result.push(I),this.createFrictionEquationsFromContact(I,this.frictionResult)}h.release(F),F=null;const A=h.get(),L=h.get(),_=h.get(),b=h.get(),M=h.get(),S=f.length;for(let E=0;E!==S&&!y;E++)for(let D=0;D!==S&&!y;D++)if(E%3!==D%3){f[D].cross(f[E],A),A.normalize(),f[E].vadd(f[D],L),_.copy(s),_.vsub(L,_),_.vsub(n,_);const k=_.dot(A);A.scale(k,b);let I=0;for(;I===E%3||I===D%3;)I++;M.copy(s),M.vsub(b,M),M.vsub(L,M),M.vsub(n,M);const $=Math.abs(k),G=M.length();if($<f[I].length()&&G<p){if(u)return!0;y=!0;const R=this.createContactEquation(r,a,t,e,l,d);L.vadd(b,R.rj),R.rj.copy(R.rj),M.negate(R.ni),R.ni.normalize(),R.ri.copy(R.rj),R.ri.vadd(n,R.ri),R.ri.vsub(s,R.ri),R.ri.normalize(),R.ri.scale(p,R.ri),R.ri.vadd(s,R.ri),R.ri.vsub(r.position,R.ri),R.rj.vadd(n,R.rj),R.rj.vsub(a.position,R.rj),this.result.push(R),this.createFrictionEquationsFromContact(R,this.frictionResult)}}h.release(A,L,_,b,M)}planeBox(t,e,s,n,i,o,r,a,l,d,u){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,s,n,i,o,r,a,t,e,u)}convexConvex(t,e,s,n,i,o,r,a,l,d,u,h,f){const p=Si;if(!(s.distanceTo(n)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,s,i,n,o,p,h,f)){const y=[],m=Mi;t.clipAgainstHull(s,i,e,n,o,p,-100,100,y);let w=0;for(let v=0;v!==y.length;v++){if(u)return!0;const x=this.createContactEquation(r,a,t,e,l,d),g=x.ri,z=x.rj;p.negate(x.ni),y[v].normal.negate(m),m.scale(y[v].depth,m),y[v].point.vadd(m,g),z.copy(y[v].point),g.vsub(s,g),z.vsub(n,z),g.vadd(s,g),g.vsub(r.position,g),z.vadd(n,z),z.vsub(a.position,z),this.result.push(x),w++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(x,this.frictionResult)}this.enableFrictionReduction&&w&&this.createFrictionFromAverage(w)}}sphereConvex(t,e,s,n,i,o,r,a,l,d,u){const h=this.v3pool;s.vsub(n,di);const f=e.faceNormals,p=e.faces,y=e.vertices,m=t.radius;let w=!1;for(let v=0;v!==y.length;v++){const x=y[v],g=mi;o.vmult(x,g),n.vadd(g,g);const z=fi;if(g.vsub(s,z),z.lengthSquared()<m*m){if(u)return!0;w=!0;const C=this.createContactEquation(r,a,t,e,l,d);C.ri.copy(z),C.ri.normalize(),C.ni.copy(C.ri),C.ri.scale(m,C.ri),g.vsub(n,C.rj),C.ri.vadd(s,C.ri),C.ri.vsub(r.position,C.ri),C.rj.vadd(n,C.rj),C.rj.vsub(a.position,C.rj),this.result.push(C),this.createFrictionEquationsFromContact(C,this.frictionResult);return}}for(let v=0,x=p.length;v!==x&&w===!1;v++){const g=f[v],z=p[v],C=vi;o.vmult(g,C);const B=yi;o.vmult(y[z[0]],B),B.vadd(n,B);const F=wi;C.scale(-m,F),s.vadd(F,F);const q=xi;F.vsub(B,q);const A=q.dot(C),L=gi;if(s.vsub(B,L),A<0&&L.dot(C)>0){const _=[];for(let b=0,M=z.length;b!==M;b++){const S=h.get();o.vmult(y[z[b]],S),n.vadd(S,S),_.push(S)}if(si(_,C,s)){if(u)return!0;w=!0;const b=this.createContactEquation(r,a,t,e,l,d);C.scale(-m,b.ri),C.negate(b.ni);const M=h.get();C.scale(-A,M);const S=h.get();C.scale(-m,S),s.vsub(n,b.rj),b.rj.vadd(S,b.rj),b.rj.vadd(M,b.rj),b.rj.vadd(n,b.rj),b.rj.vsub(a.position,b.rj),b.ri.vadd(s,b.ri),b.ri.vsub(r.position,b.ri),h.release(M),h.release(S),this.result.push(b),this.createFrictionEquationsFromContact(b,this.frictionResult);for(let E=0,D=_.length;E!==D;E++)h.release(_[E]);return}else for(let b=0;b!==z.length;b++){const M=h.get(),S=h.get();o.vmult(y[z[(b+1)%z.length]],M),o.vmult(y[z[(b+2)%z.length]],S),n.vadd(M,M),n.vadd(S,S);const E=ui;S.vsub(M,E);const D=pi;E.unit(D);const k=h.get(),I=h.get();s.vsub(M,I);const $=I.dot(D);D.scale($,k),k.vadd(M,k);const G=h.get();if(k.vsub(s,G),$>0&&$*$<E.lengthSquared()&&G.lengthSquared()<m*m){if(u)return!0;const R=this.createContactEquation(r,a,t,e,l,d);k.vsub(n,R.rj),k.vsub(s,R.ni),R.ni.normalize(),R.ni.scale(m,R.ri),R.rj.vadd(n,R.rj),R.rj.vsub(a.position,R.rj),R.ri.vadd(s,R.ri),R.ri.vsub(r.position,R.ri),this.result.push(R),this.createFrictionEquationsFromContact(R,this.frictionResult);for(let Q=0,yt=_.length;Q!==yt;Q++)h.release(_[Q]);h.release(M),h.release(S),h.release(k),h.release(G),h.release(I);return}h.release(M),h.release(S),h.release(k),h.release(G),h.release(I)}for(let b=0,M=_.length;b!==M;b++)h.release(_[b])}}}planeConvex(t,e,s,n,i,o,r,a,l,d,u){const h=bi,f=Ei;f.set(0,0,1),i.vmult(f,f);let p=0;const y=zi;for(let m=0;m!==e.vertices.length;m++)if(h.copy(e.vertices[m]),o.vmult(h,h),n.vadd(h,h),h.vsub(s,y),f.dot(y)<=0){if(u)return!0;const v=this.createContactEquation(r,a,t,e,l,d),x=Ci;f.scale(f.dot(y),x),h.vsub(x,x),x.vsub(s,v.ri),v.ni.copy(f),h.vsub(n,v.rj),v.ri.vadd(s,v.ri),v.ri.vsub(r.position,v.ri),v.rj.vadd(n,v.rj),v.rj.vsub(a.position,v.rj),this.result.push(v),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(v,this.frictionResult)}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,s,n,i,o,r,a,l,d,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,s,n,i,o,r,a,t,e,u)}sphereHeightfield(t,e,s,n,i,o,r,a,l,d,u){const h=e.data,f=t.radius,p=e.elementSize,y=ki,m=Li;j.pointToLocalFrame(n,o,s,m);let w=Math.floor((m.x-f)/p)-1,v=Math.ceil((m.x+f)/p)+1,x=Math.floor((m.y-f)/p)-1,g=Math.ceil((m.y+f)/p)+1;if(v<0||g<0||w>h.length||x>h[0].length)return;w<0&&(w=0),v<0&&(v=0),x<0&&(x=0),g<0&&(g=0),w>=h.length&&(w=h.length-1),v>=h.length&&(v=h.length-1),g>=h[0].length&&(g=h[0].length-1),x>=h[0].length&&(x=h[0].length-1);const z=[];e.getRectMinMax(w,x,v,g,z);const C=z[0],B=z[1];if(m.z-f>B||m.z+f<C)return;const F=this.result;for(let q=w;q<v;q++)for(let A=x;A<g;A++){const L=F.length;let _=!1;if(e.getConvexTrianglePillar(q,A,!1),j.pointToWorldFrame(n,o,e.pillarOffset,y),s.distanceTo(y)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(_=this.sphereConvex(t,e.pillarConvex,s,y,i,o,r,a,t,e,u)),u&&_||(e.getConvexTrianglePillar(q,A,!0),j.pointToWorldFrame(n,o,e.pillarOffset,y),s.distanceTo(y)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(_=this.sphereConvex(t,e.pillarConvex,s,y,i,o,r,a,t,e,u)),u&&_))return!0;if(F.length-L>2)return}}boxHeightfield(t,e,s,n,i,o,r,a,l,d,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,s,n,i,o,r,a,t,e,u)}convexHeightfield(t,e,s,n,i,o,r,a,l,d,u){const h=e.data,f=e.elementSize,p=t.boundingSphereRadius,y=qi,m=Ri,w=Ii;j.pointToLocalFrame(n,o,s,w);let v=Math.floor((w.x-p)/f)-1,x=Math.ceil((w.x+p)/f)+1,g=Math.floor((w.y-p)/f)-1,z=Math.ceil((w.y+p)/f)+1;if(x<0||z<0||v>h.length||g>h[0].length)return;v<0&&(v=0),x<0&&(x=0),g<0&&(g=0),z<0&&(z=0),v>=h.length&&(v=h.length-1),x>=h.length&&(x=h.length-1),z>=h[0].length&&(z=h[0].length-1),g>=h[0].length&&(g=h[0].length-1);const C=[];e.getRectMinMax(v,g,x,z,C);const B=C[0],F=C[1];if(!(w.z-p>F||w.z+p<B))for(let q=v;q<x;q++)for(let A=g;A<z;A++){let L=!1;if(e.getConvexTrianglePillar(q,A,!1),j.pointToWorldFrame(n,o,e.pillarOffset,y),s.distanceTo(y)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(L=this.convexConvex(t,e.pillarConvex,s,y,i,o,r,a,null,null,u,m,null)),u&&L||(e.getConvexTrianglePillar(q,A,!0),j.pointToWorldFrame(n,o,e.pillarOffset,y),s.distanceTo(y)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(L=this.convexConvex(t,e.pillarConvex,s,y,i,o,r,a,null,null,u,m,null)),u&&L))return!0}}sphereParticle(t,e,s,n,i,o,r,a,l,d,u){const h=Ni;if(h.set(0,0,1),n.vsub(s,h),h.lengthSquared()<=t.radius*t.radius){if(u)return!0;const p=this.createContactEquation(a,r,e,t,l,d);h.normalize(),p.rj.copy(h),p.rj.scale(t.radius,p.rj),p.ni.copy(h),p.ni.negate(p.ni),p.ri.set(0,0,0),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}}planeParticle(t,e,s,n,i,o,r,a,l,d,u){const h=Ai;h.set(0,0,1),r.quaternion.vmult(h,h);const f=Pi;if(n.vsub(r.position,f),h.dot(f)<=0){if(u)return!0;const y=this.createContactEquation(a,r,e,t,l,d);y.ni.copy(h),y.ni.negate(y.ni),y.ri.set(0,0,0);const m=Bi;h.scale(h.dot(n),m),n.vsub(m,m),y.rj.copy(m),this.result.push(y),this.createFrictionEquationsFromContact(y,this.frictionResult)}}boxParticle(t,e,s,n,i,o,r,a,l,d,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,s,n,i,o,r,a,t,e,u)}convexParticle(t,e,s,n,i,o,r,a,l,d,u){let h=-1;const f=Fi,p=_i;let y=null;const m=Ti;if(m.copy(n),m.vsub(s,m),i.conjugate(ge),ge.vmult(m,m),t.pointIsInside(m)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(s,i),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(i);for(let w=0,v=t.faces.length;w!==v;w++){const x=[t.worldVertices[t.faces[w][0]]],g=t.worldFaceNormals[w];n.vsub(x[0],be);const z=-g.dot(be);if(y===null||Math.abs(z)<Math.abs(y)){if(u)return!0;y=z,h=w,f.copy(g)}}if(h!==-1){const w=this.createContactEquation(a,r,e,t,l,d);f.scale(y,p),p.vadd(n,p),p.vsub(s,p),w.rj.copy(p),f.negate(w.ni),w.ri.set(0,0,0);const v=w.ri,x=w.rj;v.vadd(n,v),v.vsub(a.position,v),x.vadd(s,x),x.vsub(r.position,x),this.result.push(w),this.createFrictionEquationsFromContact(w,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(t,e,s,n,i,o,r,a,l,d,u){return this.convexHeightfield(e,t,n,s,o,i,a,r,l,d,u)}particleCylinder(t,e,s,n,i,o,r,a,l,d,u){return this.convexParticle(e,t,n,s,o,i,a,r,l,d,u)}sphereTrimesh(t,e,s,n,i,o,r,a,l,d,u){const h=Vn,f=Dn,p=Hn,y=Gn,m=Yn,w=Un,v=Zn,x=Wn,g=jn,z=Jn;j.pointToLocalFrame(n,o,s,m);const C=t.radius;v.lowerBound.set(m.x-C,m.y-C,m.z-C),v.upperBound.set(m.x+C,m.y+C,m.z+C),e.getTrianglesInAABB(v,z);const B=On,F=t.radius*t.radius;for(let b=0;b<z.length;b++)for(let M=0;M<3;M++)if(e.getVertex(e.indices[z[b]*3+M],B),B.vsub(m,g),g.lengthSquared()<=F){if(x.copy(B),j.pointToWorldFrame(n,o,x,B),B.vsub(s,g),u)return!0;let S=this.createContactEquation(r,a,t,e,l,d);S.ni.copy(g),S.ni.normalize(),S.ri.copy(S.ni),S.ri.scale(t.radius,S.ri),S.ri.vadd(s,S.ri),S.ri.vsub(r.position,S.ri),S.rj.copy(B),S.rj.vsub(a.position,S.rj),this.result.push(S),this.createFrictionEquationsFromContact(S,this.frictionResult)}for(let b=0;b<z.length;b++)for(let M=0;M<3;M++){e.getVertex(e.indices[z[b]*3+M],h),e.getVertex(e.indices[z[b]*3+(M+1)%3],f),f.vsub(h,p),m.vsub(f,w);const S=w.dot(p);m.vsub(h,w);let E=w.dot(p);if(E>0&&S<0&&(m.vsub(h,w),y.copy(p),y.normalize(),E=w.dot(y),y.scale(E,w),w.vadd(h,w),w.distanceTo(m)<t.radius)){if(u)return!0;const k=this.createContactEquation(r,a,t,e,l,d);w.vsub(m,k.ni),k.ni.normalize(),k.ni.scale(t.radius,k.ri),k.ri.vadd(s,k.ri),k.ri.vsub(r.position,k.ri),j.pointToWorldFrame(n,o,w,w),w.vsub(a.position,k.rj),j.vectorToWorldFrame(o,k.ni,k.ni),j.vectorToWorldFrame(o,k.ri,k.ri),this.result.push(k),this.createFrictionEquationsFromContact(k,this.frictionResult)}}const q=Xn,A=$n,L=Kn,_=kn;for(let b=0,M=z.length;b!==M;b++){e.getTriangleVertices(z[b],q,A,L),e.getNormal(z[b],_),m.vsub(q,w);let S=w.dot(_);if(_.scale(S,w),m.vsub(w,w),S=w.distanceTo(m),Y.pointInTriangle(w,q,A,L)&&S<t.radius){if(u)return!0;let E=this.createContactEquation(r,a,t,e,l,d);w.vsub(m,E.ni),E.ni.normalize(),E.ni.scale(t.radius,E.ri),E.ri.vadd(s,E.ri),E.ri.vsub(r.position,E.ri),j.pointToWorldFrame(n,o,w,w),w.vsub(a.position,E.rj),j.vectorToWorldFrame(o,E.ni,E.ni),j.vectorToWorldFrame(o,E.ri,E.ri),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult)}}z.length=0}planeTrimesh(t,e,s,n,i,o,r,a,l,d,u){const h=new c,f=qn;f.set(0,0,1),i.vmult(f,f);for(let p=0;p<e.vertices.length/3;p++){e.getVertex(p,h);const y=new c;y.copy(h),j.pointToWorldFrame(n,o,y,h);const m=Rn;if(h.vsub(s,m),f.dot(m)<=0){if(u)return!0;const v=this.createContactEquation(r,a,t,e,l,d);v.ni.copy(f);const x=Ln;f.scale(m.dot(f),x),h.vsub(x,x),v.ri.copy(x),v.ri.vsub(r.position,v.ri),v.rj.copy(h),v.rj.vsub(a.position,v.rj),this.result.push(v),this.createFrictionEquationsFromContact(v,this.frictionResult)}}}}const ft=new c,gt=new c,bt=new c,Tn=new c,Fn=new c,_n=new U,In=new U,qn=new c,Rn=new c,Ln=new c,kn=new c,jn=new c;new c;const On=new c,Wn=new c,Vn=new c,Dn=new c,Hn=new c,Gn=new c,Yn=new c,Un=new c,Xn=new c,$n=new c,Kn=new c,Zn=new J,Jn=[],kt=new c,xe=new c,Qn=new c,ti=new c,ei=new c;function si(N,t,e){let s=null;const n=N.length;for(let i=0;i!==n;i++){const o=N[i],r=Qn;N[(i+1)%n].vsub(o,r);const a=ti;r.cross(t,a);const l=ei;e.vsub(o,l);const d=a.dot(l);if(s===null||d>0&&s===!0||d<=0&&s===!1){s===null&&(s=d>0);continue}else return!1}return!0}const jt=new c,ni=new c,ii=new c,oi=new c,ri=[new c,new c,new c,new c,new c,new c],ci=new c,ai=new c,li=new c,hi=new c,di=new c,ui=new c,pi=new c,fi=new c,mi=new c,vi=new c,yi=new c,wi=new c,xi=new c,gi=new c;new c;new c;const bi=new c,Ei=new c,zi=new c,Ci=new c,Si=new c,Mi=new c,Ai=new c,Pi=new c,Bi=new c,Ni=new c,ge=new U,Ti=new c;new c;const Fi=new c,be=new c,_i=new c,Ii=new c,qi=new c,Ri=[0],Li=new c,ki=new c;class Ee{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const s=e;e=t,t=s}return t<<16|e}set(t,e){const s=this.getKey(t,e),n=this.current;let i=0;for(;s>n[i];)i++;if(s!==n[i]){for(let o=n.length-1;o>=i;o--)n[o+1]=n[o];n[i]=s}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const s=this.current,n=this.previous,i=s.length,o=n.length;let r=0;for(let a=0;a<i;a++){let l=!1;const d=s[a];for(;d>n[r];)r++;l=d===n[r],l||ze(t,d)}r=0;for(let a=0;a<o;a++){let l=!1;const d=n[a];for(;d>s[r];)r++;l=s[r]===d,l||ze(e,d)}}}function ze(N,t){N.push((t&4294901760)>>16,t&65535)}const Xt=(N,t)=>N<t?`${N}-${t}`:`${t}-${N}`;class ji{constructor(){this.data={keys:[]}}get(t,e){const s=Xt(t,e);return this.data[s]}set(t,e,s){const n=Xt(t,e);this.get(t,e)||this.data.keys.push(n),this.data[n]=s}delete(t,e){const s=Xt(t,e),n=this.data.keys.indexOf(s);n!==-1&&this.data.keys.splice(n,1),delete this.data[s]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){const s=e.pop();delete t[s]}}}class Oi extends Se{constructor(t){t===void 0&&(t={});super();this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=t.quatNormalizeSkip!==void 0?t.quatNormalizeSkip:0,this.quatNormalizeFast=t.quatNormalizeFast!==void 0?t.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new c,t.gravity&&this.gravity.copy(t.gravity),this.broadphase=t.broadphase!==void 0?t.broadphase:new Ws,this.bodies=[],this.hasActiveBodies=!1,this.solver=t.solver!==void 0?t.solver:new qe,this.constraints=[],this.narrowphase=new Nn(this),this.collisionMatrix=new re,this.collisionMatrixPrevious=new re,this.bodyOverlapKeeper=new Ee,this.shapeOverlapKeeper=new Ee,this.contactmaterials=[],this.contactMaterialTable=new ji,this.defaultMaterial=new Ft("default"),this.defaultContactMaterial=new Tt(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);e!==-1&&this.constraints.splice(e,1)}rayTest(t,e,s){s instanceof Vt?this.raycastClosest(t,e,{skipBackfaces:!0},s):this.raycastAll(t,e,{skipBackfaces:!0},s)}raycastAll(t,e,s,n){return s===void 0&&(s={}),s.mode=Y.ALL,s.from=t,s.to=e,s.callback=n,$t.intersectWorld(this,s)}raycastAny(t,e,s,n){return s===void 0&&(s={}),s.mode=Y.ANY,s.from=t,s.to=e,s.result=n,$t.intersectWorld(this,s)}raycastClosest(t,e,s,n){return s===void 0&&(s={}),s.mode=Y.CLOSEST,s.from=t,s.to=e,s.result=n,$t.intersectWorld(this,s)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof P&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,s=this.bodies,n=s.indexOf(t);if(n!==-1){s.splice(n,1);for(let i=0;i!==s.length;i++)s[i].index=i;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let s=0;s<e.length;s++){const n=e[s].shapes;for(let i=0;i<n.length;i++){const o=n[i];if(o.id===t)return o}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);e!==-1&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){t===void 0&&(t=1/60),e===void 0&&(e=10);const s=X.now()/1e3;if(!this.lastCallTime)this.step(t,void 0,e);else{const n=s-this.lastCallTime;this.step(t,n,e)}this.lastCallTime=s}step(t,e,s){if(s===void 0&&(s=10),e===void 0)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const n=X.now();let i=0;for(;this.accumulator>=t&&i<s&&(this.internalStep(t),this.accumulator-=t,i++,!(X.now()-n>t*1e3)););this.accumulator=this.accumulator%t;const o=this.accumulator/t;for(let r=0;r!==this.bodies.length;r++){const a=this.bodies[r];a.previousPosition.lerp(a.position,o,a.interpolatedPosition),a.previousQuaternion.slerp(a.quaternion,o,a.interpolatedQuaternion),a.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,s=Gi,n=Yi,i=this.bodies.length,o=this.bodies,r=this.solver,a=this.gravity,l=this.doProfiling,d=this.profile,u=P.DYNAMIC;let h=-1/0;const f=this.constraints,p=Hi;a.length();const y=a.x,m=a.y,w=a.z;let v=0;for(l&&(h=X.now()),v=0;v!==i;v++){const b=o[v];if(b.type===u){const M=b.force,S=b.mass;M.x+=S*y,M.y+=S*m,M.z+=S*w}}for(let b=0,M=this.subsystems.length;b!==M;b++)this.subsystems[b].update();l&&(h=X.now()),s.length=0,n.length=0,this.broadphase.collisionPairs(this,s,n),l&&(d.broadphase=X.now()-h);let x=f.length;for(v=0;v!==x;v++){const b=f[v];if(!b.collideConnected)for(let M=s.length-1;M>=0;M-=1)(b.bodyA===s[M]&&b.bodyB===n[M]||b.bodyB===s[M]&&b.bodyA===n[M])&&(s.splice(M,1),n.splice(M,1))}this.collisionMatrixTick(),l&&(h=X.now());const g=Di,z=e.length;for(v=0;v!==z;v++)g.push(e[v]);e.length=0;const C=this.frictionEquations.length;for(v=0;v!==C;v++)p.push(this.frictionEquations[v]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(s,n,this,e,g,this.frictionEquations,p),l&&(d.narrowphase=X.now()-h),l&&(h=X.now()),v=0;v<this.frictionEquations.length;v++)r.addEquation(this.frictionEquations[v]);const B=e.length;for(let b=0;b!==B;b++){const M=e[b],S=M.bi,E=M.bj,D=M.si,k=M.sj;let I;if(S.material&&E.material?I=this.getContactMaterial(S.material,E.material)||this.defaultContactMaterial:I=this.defaultContactMaterial,I.friction,S.material&&E.material&&(S.material.friction>=0&&E.material.friction>=0&&S.material.friction*E.material.friction,S.material.restitution>=0&&E.material.restitution>=0&&(M.restitution=S.material.restitution*E.material.restitution)),r.addEquation(M),S.allowSleep&&S.type===P.DYNAMIC&&S.sleepState===P.SLEEPING&&E.sleepState===P.AWAKE&&E.type!==P.STATIC){const $=E.velocity.lengthSquared()+E.angularVelocity.lengthSquared(),G=E.sleepSpeedLimit**2;$>=G*2&&(S.wakeUpAfterNarrowphase=!0)}if(E.allowSleep&&E.type===P.DYNAMIC&&E.sleepState===P.SLEEPING&&S.sleepState===P.AWAKE&&S.type!==P.STATIC){const $=S.velocity.lengthSquared()+S.angularVelocity.lengthSquared(),G=S.sleepSpeedLimit**2;$>=G*2&&(E.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(S,E,!0),this.collisionMatrixPrevious.get(S,E)||(St.body=E,St.contact=M,S.dispatchEvent(St),St.body=S,E.dispatchEvent(St)),this.bodyOverlapKeeper.set(S.id,E.id),this.shapeOverlapKeeper.set(D.id,k.id)}for(this.emitContactEvents(),l&&(d.makeContactConstraints=X.now()-h,h=X.now()),v=0;v!==i;v++){const b=o[v];b.wakeUpAfterNarrowphase&&(b.wakeUp(),b.wakeUpAfterNarrowphase=!1)}for(x=f.length,v=0;v!==x;v++){const b=f[v];b.update();for(let M=0,S=b.equations.length;M!==S;M++){const E=b.equations[M];r.addEquation(E)}}r.solve(t,this),l&&(d.solve=X.now()-h),r.removeAllEquations();const F=Math.pow;for(v=0;v!==i;v++){const b=o[v];if(b.type&u){const M=F(1-b.linearDamping,t),S=b.velocity;S.scale(M,S);const E=b.angularVelocity;if(E){const D=F(1-b.angularDamping,t);E.scale(D,E)}}}this.dispatchEvent(Vi),l&&(h=X.now());const A=this.stepnumber%(this.quatNormalizeSkip+1)===0,L=this.quatNormalizeFast;for(v=0;v!==i;v++)o[v].integrate(t,A,L);this.clearForces(),this.broadphase.dirty=!0,l&&(d.integrate=X.now()-h),this.stepnumber+=1,this.dispatchEvent(Wi);let _=!0;if(this.allowSleep)for(_=!1,v=0;v!==i;v++){const b=o[v];b.sleepTick(this.time),b.sleepState!==P.SLEEPING&&(_=!0)}this.hasActiveBodies=_}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(ct,at),t){for(let i=0,o=ct.length;i<o;i+=2)Mt.bodyA=this.getBodyById(ct[i]),Mt.bodyB=this.getBodyById(ct[i+1]),this.dispatchEvent(Mt);Mt.bodyA=Mt.bodyB=null}if(e){for(let i=0,o=at.length;i<o;i+=2)At.bodyA=this.getBodyById(at[i]),At.bodyB=this.getBodyById(at[i+1]),this.dispatchEvent(At);At.bodyA=At.bodyB=null}ct.length=at.length=0;const s=this.hasAnyEventListener("beginShapeContact"),n=this.hasAnyEventListener("endShapeContact");if((s||n)&&this.shapeOverlapKeeper.getDiff(ct,at),s){for(let i=0,o=ct.length;i<o;i+=2){const r=this.getShapeById(ct[i]),a=this.getShapeById(ct[i+1]);lt.shapeA=r,lt.shapeB=a,r&&(lt.bodyA=r.body),a&&(lt.bodyB=a.body),this.dispatchEvent(lt)}lt.bodyA=lt.bodyB=lt.shapeA=lt.shapeB=null}if(n){for(let i=0,o=at.length;i<o;i+=2){const r=this.getShapeById(at[i]),a=this.getShapeById(at[i+1]);ht.shapeA=r,ht.shapeB=a,r&&(ht.bodyA=r.body),a&&(ht.bodyB=a.body),this.dispatchEvent(ht)}ht.bodyA=ht.bodyB=ht.shapeA=ht.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let s=0;s!==e;s++){const n=t[s];n.force,n.torque,n.force.set(0,0,0),n.torque.set(0,0,0)}}}new J;const $t=new Y,X=globalThis.performance||{};if(!X.now){let N=Date.now();X.timing&&X.timing.navigationStart&&(N=X.timing.navigationStart),X.now=()=>Date.now()-N}new c;const Wi={type:"postStep"},Vi={type:"preStep"},St={type:P.COLLIDE_EVENT_NAME,body:null,contact:null},Di=[],Hi=[],Gi=[],Yi=[],ct=[],at=[],Mt={type:"beginContact",bodyA:null,bodyB:null},At={type:"endContact",bodyA:null,bodyB:null},lt={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},ht={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null};var Bt=function(){var N=0,t=document.createElement("div");t.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",t.addEventListener("click",function(d){d.preventDefault(),s(++N%t.children.length)},!1);function e(d){return t.appendChild(d.dom),d}function s(d){for(var u=0;u<t.children.length;u++)t.children[u].style.display=u===d?"block":"none";N=d}var n=(performance||Date).now(),i=n,o=0,r=e(new Bt.Panel("FPS","#0ff","#002")),a=e(new Bt.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var l=e(new Bt.Panel("MB","#f08","#201"));return s(0),{REVISION:16,dom:t,addPanel:e,showPanel:s,begin:function(){n=(performance||Date).now()},end:function(){o++;var d=(performance||Date).now();if(a.update(d-n,200),d>=i+1e3&&(r.update(o*1e3/(d-i),100),i=d,o=0,l)){var u=performance.memory;l.update(u.usedJSHeapSize/1048576,u.jsHeapSizeLimit/1048576)}return d},update:function(){n=this.end()},domElement:t,setMode:s}};Bt.Panel=function(N,t,e){var s=1/0,n=0,i=Math.round,o=i(window.devicePixelRatio||1),r=80*o,a=48*o,l=3*o,d=2*o,u=3*o,h=15*o,f=74*o,p=30*o,y=document.createElement("canvas");y.width=r,y.height=a,y.style.cssText="width:80px;height:48px";var m=y.getContext("2d");return m.font="bold "+9*o+"px Helvetica,Arial,sans-serif",m.textBaseline="top",m.fillStyle=e,m.fillRect(0,0,r,a),m.fillStyle=t,m.fillText(N,l,d),m.fillRect(u,h,f,p),m.fillStyle=e,m.globalAlpha=.9,m.fillRect(u,h,f,p),{dom:y,update:function(w,v){s=Math.min(s,w),n=Math.max(n,w),m.fillStyle=e,m.globalAlpha=1,m.fillRect(0,0,r,h),m.fillStyle=t,m.fillText(i(w)+" "+N+" ("+i(s)+"-"+i(n)+")",l,d),m.drawImage(y,u+o,h,f-o,p,u,h,f-o,p),m.fillRect(u+f-o,h,o,p),m.fillStyle=e,m.globalAlpha=.9,m.fillRect(u+f-o,h,o,i((1-w/v)*p))}}};class Ui extends De{constructor(t,e){super();xt(this,"onPointerlockChange",()=>{document.pointerLockElement?(this.dispatchEvent(this.lockEvent),this.isLocked=!0):(this.dispatchEvent(this.unlockEvent),this.isLocked=!1)});xt(this,"onPointerlockError",()=>{console.error("PointerLockControlsCannon: Unable to use Pointer Lock API")});xt(this,"onMouseMove",t=>{if(!this.enabled)return;const{movementX:e,movementY:s}=t;this.yawObject.rotation.y-=e*.002,this.pitchObject.rotation.x-=s*.002,this.pitchObject.rotation.x=Math.max(-Math.PI/2,Math.min(Math.PI/2,this.pitchObject.rotation.x))});xt(this,"onKeyDown",t=>{switch(t.code){case"KeyW":case"ArrowUp":this.moveForward=!0;break;case"KeyA":case"ArrowLeft":this.moveLeft=!0;break;case"KeyS":case"ArrowDown":this.moveBackward=!0;break;case"KeyD":case"ArrowRight":this.moveRight=!0;break;case"Space":this.canJump&&(this.velocity.y=this.jumpVelocity),this.canJump=!1;break}});xt(this,"onKeyUp",t=>{switch(t.code){case"KeyW":case"ArrowUp":this.moveForward=!1;break;case"KeyA":case"ArrowLeft":this.moveLeft=!1;break;case"KeyS":case"ArrowDown":this.moveBackward=!1;break;case"KeyD":case"ArrowRight":this.moveRight=!1;break}});this.enabled=!1,this.cannonBody=e,this.velocityFactor=.2,this.jumpVelocity=20,this.pitchObject=new Qt,this.pitchObject.add(t),this.yawObject=new Qt,this.yawObject.position.y=2,this.yawObject.add(this.pitchObject),this.quaternion=new He,this.moveForward=!1,this.moveBackward=!1,this.moveLeft=!1,this.moveRight=!1,this.canJump=!1;const s=new c,n=new c(0,1,0);this.cannonBody.addEventListener("collide",i=>{const{contact:o}=i;o.bi.id===this.cannonBody.id?o.ni.negate(s):s.copy(o.ni),s.dot(n)>.5&&(this.canJump=!0)}),this.velocity=this.cannonBody.velocity,this.inputVelocity=new Ot,this.euler=new Ge,this.lockEvent={type:"lock"},this.unlockEvent={type:"unlock"},this.connect()}connect(){document.addEventListener("mousemove",this.onMouseMove),document.addEventListener("pointerlockchange",this.onPointerlockChange),document.addEventListener("pointerlockerror",this.onPointerlockError),document.addEventListener("keydown",this.onKeyDown),document.addEventListener("keyup",this.onKeyUp)}disconnect(){document.removeEventListener("mousemove",this.onMouseMove),document.removeEventListener("pointerlockchange",this.onPointerlockChange),document.removeEventListener("pointerlockerror",this.onPointerlockError),document.removeEventListener("keydown",this.onKeyDown),document.removeEventListener("keyup",this.onKeyUp)}dispose(){this.disconnect()}lock(){document.body.requestPointerLock()}unlock(){document.exitPointerLock()}getObject(){return this.yawObject}getDirection(){const t=new c(0,0,-1);return t.applyQuaternion(this.quaternion),t}update(t){this.enabled!==!1&&(t*=1e3,t*=.1,this.inputVelocity.set(0,0,0),this.moveForward&&(this.inputVelocity.z=-this.velocityFactor*t),this.moveBackward&&(this.inputVelocity.z=this.velocityFactor*t),this.moveLeft&&(this.inputVelocity.x=-this.velocityFactor*t),this.moveRight&&(this.inputVelocity.x=this.velocityFactor*t),this.euler.x=this.pitchObject.rotation.x,this.euler.y=this.yawObject.rotation.y,this.euler.order="XYZ",this.quaternion.setFromEuler(this.euler),this.inputVelocity.applyQuaternion(this.quaternion),this.velocity.x+=this.inputVelocity.x,this.velocity.z+=this.inputVelocity.z,this.yawObject.position.copy(this.cannonBody.position))}}const Le=N=>(ds("data-v-f97af400"),N=N(),us(),N),Xi={id:"instructions"},$i=Le(()=>Ce("span",null,"Click to play",-1)),Ki=Le(()=>Ce("br",null,null,-1)),Zi=ps("(W,A,S,D = Move, SPACE = Jump, MOUSE = Look, CLICK = Shoot) "),Ji=[$i,Ki,Zi],Qi={setup(N){as(()=>{t()});function t(){let e,s,n,i,o,r,a;const l=.016666666666666666;let d=performance.now(),u,h,f;const p=[],y=[],m=[],w=[],v=document.getElementById("instructions");x(),z(),C(),B();function x(){e=new Ye(75,window.innerWidth/window.innerHeight,.1,1e3);const q=new Ue().load(["/textures/environmentMaps/0/px.jpg","/textures/environmentMaps/0/nx.jpg","/textures/environmentMaps/0/py.jpg","/textures/environmentMaps/0/ny.jpg","/textures/environmentMaps/0/pz.jpg","/textures/environmentMaps/0/nz.jpg"]);s=new Xe;const A=new $e(30);s.add(A),q.encoding=te,s.background=q,s.environment=q,n=new Ke({antialias:!0}),n.setSize(window.innerWidth,window.innerHeight),n.setPixelRatio(window.devicePixelRatio),n.physicallyCorrectLights=!0,n.outputEncoding=te,n.toneMapping=Ze,n.toneMappingExposure=3,n.shadowMap.enabled=!0,n.shadowMap.type=Je,document.body.appendChild(n.domElement),i=new Bt,document.body.appendChild(i.dom);const L=new Qe(16777215,.1);s.add(L);const _=new ts(16777215,.9,0,Math.PI/4,1);_.position.set(10,30,20),_.target.position.set(0,0,0),_.castShadow=!0,_.shadow.camera.near=10,_.shadow.camera.far=100,_.shadow.camera.fov=30,_.shadow.mapSize.width=2048,_.shadow.mapSize.height=2048,s.add(_),o=new es({color:14540253});const b=new ss(300,300,100,100);b.rotateX(-Math.PI/2);const M=new _t(b,o);M.receiveShadow=!0,s.add(M),window.addEventListener("resize",g)}function g(){e.aspect=window.innerWidth/window.innerHeight,e.updateProjectionMatrix(),n.setSize(window.innerWidth,window.innerHeight)}function z(){r=new Oi,r.defaultContactMaterial.contactEquationStiffness=1e9,r.defaultContactMaterial.contactEquationRelaxation=4;const F=new qe;F.iterations=7,F.tolerance=.1,r.solver=new gn(F),r.gravity.set(0,-20,0),f=new Ft("physics");const q=new Tt(f,f,{friction:.5,restitution:.3});r.addContactMaterial(q);const A=new os;A.setDecoderPath("/draco/");const L=new rs;L.setDRACOLoader(A);let _;L.load("models/Detector_model/Detector.gltf",W=>{W.scene.scale.set(.7,.7,.7),_=new ee().setFromObject(W.scene);const V=new vt(_.getSize().divide(new Ot(2,2,2))),O=new P({mass:.5,material:f});O.addShape(V);const K=(Math.random()-.5)*20,ot=(Math.random()-.5)*1+1,pt=(Math.random()-.5)*20;O.position.set(K,ot,pt),W.scene.position.copy(O.position),W.scene.castShadow=!0,r.addBody(O),s.add(W.scene),m.push(O),w.push(W.scene)}),L.load("models/DSPEC_jr/DSPEC_jr.gltf",W=>{W.scene.scale.set(.5,.5,.5),W.scene.rotation.y=0,_=new ee().setFromObject(W.scene);const V=new vt(_.getSize().divide(new Ot(2,2,2))),O=new P({mass:.5,material:f});O.addShape(V);const K=(Math.random()-.5)*20,ot=(Math.random()-.5)*1+1,pt=(Math.random()-.5)*20;O.position.set(K,ot,pt),W.scene.position.copy(O.position),W.scene.castShadow=!0,r.addBody(O),s.add(W.scene),m.push(O),w.push(W.scene)});const b=1.3;u=new we(b),h=new P({mass:5,material:f}),h.addShape(u),h.position.set(0,5,0),h.linearDamping=.9,r.addBody(h);const M=new vn,S=new P({mass:0,material:f});S.addShape(M),S.quaternion.setFromEuler(-Math.PI/2,0,0),r.addBody(S);const E=new c(1,1,1),D=new vt(E),k=new se(E.x*2,E.y*2,E.z*2);for(let W=0;W<1;W++){const V=new P({mass:5});V.addShape(D);const O=new _t(k,o),K=(Math.random()-.5)*20,ot=(Math.random()-.5)*1+1,pt=(Math.random()-.5)*20;V.position.set(K,ot,pt),O.position.copy(V.position),O.castShadow=!0,O.receiveShadow=!0,r.addBody(V),s.add(O),m.push(V),w.push(O)}const I=.5,$=.3,G=.1*I,R=5,Q=new c(I,I,I*.1),yt=new vt(Q),Et=new se(Q.x*2,Q.y*2,Q.z*2);let ut;for(let W=0;W<R;W++){const V=new P({mass:W===0?0:$});V.addShape(yt);const O=new _t(Et,o);if(V.position.set(5,(R-W)*(I*2+2*G)+I*2+G,0),V.linearDamping=.01,V.angularDamping=.01,O.castShadow=!0,O.receiveShadow=!0,r.addBody(V),s.add(O),m.push(V),w.push(O),W>0){const K=new ve(V,new c(-I,I+G,0),ut,new c(-I,-I-G,0)),ot=new ve(V,new c(I,I+G,0),ut,new c(I,-I-G,0));r.addConstraint(K),r.addConstraint(ot)}ut=V}const wt=15,zt=new we(.2),ke=new ns(zt.radius,32,32);function je(){const W=new Ot(0,0,1);return W.unproject(e),new is(h.position,W.sub(h.position).normalize()).direction}window.addEventListener("click",W=>{if(!a.enabled)return;const V=new P({mass:1});V.addShape(zt);const O=new _t(ke,o);O.castShadow=!0,O.receiveShadow=!0,r.addBody(V),s.add(O),p.push(V),y.push(O);const K=je();V.velocity.set(K.x*wt,K.y*wt,K.z*wt);const ot=h.position.x+K.x*(u.radius*1.02+zt.radius),pt=h.position.y+K.y*(u.radius*1.02+zt.radius),Oe=h.position.z+K.z*(u.radius*1.02+zt.radius);V.position.set(ot,pt,Oe),O.position.copy(V.position)})}function C(){a=new Ui(e,h),s.add(a.getObject()),v.addEventListener("click",()=>{a.lock()}),a.addEventListener("lock",()=>{a.enabled=!0,v.style.display="none"}),a.addEventListener("unlock",()=>{a.enabled=!1,v.style.display=null})}function B(){requestAnimationFrame(B);const F=performance.now()/1e3,q=F-d;if(d=F,a.enabled){r.step(l,q);for(let A=0;A<p.length;A++)y[A].position.copy(p[A].position),y[A].quaternion.copy(p[A].quaternion);for(let A=0;A<m.length;A++)w[A].position.copy(m[A].position),w[A].quaternion.copy(m[A].quaternion)}a.update(q),n.render(s,e),i.update()}}return(e,s)=>(ls(),hs("div",Xi,Ji))}};var oo=cs(Qi,[["__scopeId","data-v-f97af400"]]);export{oo as default};
